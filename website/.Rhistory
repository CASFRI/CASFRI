Veg.Type    = c("Closed coniferous", "Open coniferous", "Mixedwood","Deciduous*", "Deciduous*", "Shrub", "Herbaceous", "Burned", "Wetland", "Water", "Cropland", "Other"),
Veg.Value   = c(                  1,                 2,           3,           4,            4,       5,            6,        7,         8,       9,         10,     11),
Flammable   = c(               TRUE,              TRUE,        TRUE,        TRUE,         TRUE,    TRUE,         TRUE,    FALSE,     FALSE,   FALSE,      FALSE,  FALSE),
Probability = c(                  1,                 1,           1,         0.5,          0.5,       1,            1,        1,         1,       1,          1,      1),
Reset.Age   = c(                  3,                 3,           3,           3,            3,       3,           -1,       -1,        -1,      -1,         -1,     -1),
X0.2        = c(                  7,                 7,           7,           7,            7,       7,            7,        7,         8,       9,         10,     11),
X3.20       = c(                  1,                 2,           4,           4,            4,       5,            6,        7,         8,       9,         10,     11),
X21.60      = c(                  1,                 2,           3,           3,            4,       5,            6,        7,         8,       9,         10,     11),
X61.80      = c(                  1,                 2,           3,           3,            4,       3,            6,        7,         8,       9,         10,     11),
X81.120     = c(                  1,                 2,           3,           3,            4,       3,            6,        7,         8,       9,         10,     11),
X121.160    = c(                  1,                 2,           3,           2,            4,       1,            6,        7,         8,       9,         10,     11)
)
sim$successionTable
yearsPerTrajStep <- sim$successionTable %>%
dplyr::select(starts_with("X")) %>%
colnames %>%
sub(pattern = "X", replacement = "", x = .) %>%
strsplit(.,"\\.") %>%
sapply(., function(x) diff(as.numeric(x)) + 1) # number of years spent in each step is the diff plus 1. sum(yearsPerTrajStep) should = maxAge +1.
yearsPerTrajStep
maxAge <- sim$successionTable %>%
select(tail(names(.), 1)) %>%
colnames() %>%
sub(pattern = "X", replacement = "", x = .) %>%
strsplit(.,"\\.") %>%
`[[`(1) %>% # this extracts first list element
`[`(2) %>% # this extracts second vector element
as.numeric()
maxAge
trajObj <- sim$successionTable %>%
dplyr::select(starts_with("X")) %>%
apply(., 1, function(x) {
rep(x, times = yearsPerTrajStep)
}) %>%
matrix(., ncol = ncol(.))
trajObj
lcc05TrajReclass
sim$successionTable
lcc05TrajTable
?sample.int
x<-1
lcc05TrajTable
lcc05TrajLabels
resample(lcc05TrajReclass$TrajectoryNum[[x]], numLccInTraj[x], replace = TRUE)
resample(lcc05TrajReclass$TrajectoryNum[[x]], numLccInTraj[x], replace = TRUE)
resample(lcc05TrajReclass$TrajectoryNum[[x]], numLccInTraj[x], replace = TRUE)
lcc05TrajReclass$TrajectoryNum
lcc05TrajReclass$TrajectoryNum[[x]]
numLccInTraj[x]
numLccInTraj
x<-2
lcc05TrajReclass$TrajectoryNum[[x]]
numLccInTraj[x]
numLccInTraj[x]
numLccInTraj[x]
numLccInTraj
resample(lcc05TrajReclass$TrajectoryNum[[x]], numLccInTraj[x], replace = TRUE)
resample(lcc05TrajReclass$TrajectoryNum[[x]], numLccInTraj[x], replace = TRUE)
resample(lcc05TrajReclass$TrajectoryNum[[x]], numLccInTraj[x], replace = TRUE)
lcc05TrajReclass
lcc05TrajReclass
lcc05VegLabels
numLccInVeg
lcc05VegTable
lcc05TrajLabels
numLccInTraj
lcc05TrajReclass
lcc05TrajTable
trajObj.raw
lcc05TrajReclass
df <- read.csv("C:/Users/MAEDW7/Downloads/KDTT_YVI_40K_mixed_forest.csv")
df
df$conifer_percent <- 0
df$deciduous_percent <- 0
unique(df$SPECIES_1_)
nrow(df)
i<-1
sp<-1
sp_name <- paste0("SPECIES_", sp, "_")
per_name <- paste0("SPECIES_", sp, "1")
sp_name
per_name
df[[sp_name]][i]
confier_list
conifer_list <- c("F", "L", "P", "SB", "SW")
deciduous_list <- c("A", "B", "W")
df[[sp_name]][i] %in% deciduous_list
df$conifer_percent <- 0
df$deciduous_percent <- 0
df$deciduous_percent[i]
df$deciduous_percent[i] <- df[[per_name]][i]
df
df <- read.csv("C:/Users/MAEDW7/Downloads/KDTT_YVI_40K_mixed_forest.csv")
df$conifer_percent <- 0
df$deciduous_percent <- 0
conifer_list <- c("F", "L", "P", "SB", "SW")
deciduous_list <- c("A", "B", "W")
for(i in 1:nrow(df)){
for(sp in c(1, 2, 3, 4)){
sp_name <- paste0("SPECIES_", sp, "_")
per_name <- paste0("SPECIES_", sp, "1")
if(df[[sp_name]][i] %in% confier_list){
df$conifer_percent[i] <- df[[per_name]][i]
}
if(df[[sp_name]][i] %in% deciduous_list){
df$deciduous_percent[i] <- df[[per_name]][i]
}
}
}
df <- read.csv("C:/Users/MAEDW7/Downloads/KDTT_YVI_40K_mixed_forest.csv")
df$conifer_percent <- 0
df$deciduous_percent <- 0
conifer_list <- c("F", "L", "P", "SB", "SW")
deciduous_list <- c("A", "B", "W")
for(i in 1:nrow(df)){
for(sp in c(1, 2, 3, 4)){
sp_name <- paste0("SPECIES_", sp, "_")
per_name <- paste0("SPECIES_", sp, "1")
if(df[[sp_name]][i] %in% conifer_list){
df$conifer_percent[i] <- df[[per_name]][i]
}
if(df[[sp_name]][i] %in% deciduous_list){
df$deciduous_percent[i] <- df[[per_name]][i]
}
}
}
df
unique(sum(df$conifer_percent, df$deciduous_percent))
sum(df$conifer_percent, df$deciduous_percent)
df$conifer_percent + df$deciduous_percent
unique(df$conifer_percent + df$deciduous_percent)
df <- read.csv("C:/Users/MAEDW7/Downloads/KDTT_YVI_40K_mixed_forest.csv")
df$conifer_percent <- 0
df$deciduous_percent <- 0
conifer_list <- c("F", "L", "P", "SB", "SW")
deciduous_list <- c("A", "B", "W")
for(i in 1:nrow(df)){
for(sp in c(1, 2, 3, 4)){
sp_name <- paste0("SPECIES_", sp, "_")
per_name <- paste0("SPECIES_", sp, "1")
if(df[[sp_name]][i] %in% conifer_list){
df$conifer_percent[i] <- df$conifer_percent[i] + df[[per_name]][i]
}
if(df[[sp_name]][i] %in% deciduous_list){
df$deciduous_percent[i] <- df$deciduous_percent[i] + df[[per_name]][i]
}
}
}
unique(df$conifer_percent + df$deciduous_percent)
df
table(df$conifer_percent + df$deciduous_percent)
table(df$conifer_percent)
table(df$deciduous_percent)
plot(df$AGE, df$conifer_percent)
hist(df$AGE)
hist(df$AGE[df$conifer_percent<30])
hist(df$AGE[df$conifer_percent>30 & df$conifer_percent<60])
hist(df$AGE[df$conifer_percent>60])
mean(df$AGE)
mean(df$AGE[df$conifer_percent<30])
mean(df$AGE[df$conifer_percent>30 & df$conifer_percent<60])
mean(df$AGE[df$conifer_percent>60])
hist(df$conifer_percent[df$AGE>100])
hist(df$conifer_percent[df$AGE>120])
hist(df$conifer_percent[df$AGE>100])
hist(df$conifer_percent[df$AGE>100 & df$AGE<120])
hist(df$conifer_percent[df$AGE<60])
hist(df$conifer_percent[df$AGE>60 & df$AGE<80])
hist(df$conifer_percent[df$AGE<60])
hist(df$conifer_percent[df$AGE>60 & df$AGE<80])
hist(df$conifer_percent[df$AGE>80 & df$AGE<100])
hist(df$conifer_percent[df$AGE>100 & df$AGE<120])
hist(df$conifer_percent[df$AGE>120])
nrow(df)
length(df$conifer_percent[df$AGE>120]))
length(df$conifer_percent[df$AGE>120])
length(df$conifer_percent[df$AGE>120])/nrow(df)
length(df$conifer_percent[df$AGE>120])/nrow(df)*100
hist(df$conifer_percent[df$AGE>100 & df$AGE<120])
length(df$conifer_percent[df$AGE>100 & df$AGE<120])/nrow(df)*100
hist(df$conifer_percent[df$AGE>80 & df$AGE<100])
length(df$conifer_percent[df$AGE>80 & df$AGE<100])/nrow(df)*100
hist(df$conifer_percent[df$AGE>60 & df$AGE<80])
length(df$conifer_percent[df$AGE>60 & df$AGE<80])/nrow(df)*100
length(df$conifer_percent[df$AGE<60])/nrow(df)*100
hist(df$conifer_percent[df$AGE<60 & df$AGE>40])
length(df$conifer_percent[df$AGE<60 & df$AGE>40])/nrow(df)*100
hist(df$conifer_percent[df$AGE<40])
length(df$conifer_percent[df$AGE<40])/nrow(df)*100
hist(df$conifer_percent[df$AGE>120])
mean(df$conifer_percent[df$AGE>120])
mean(df$conifer_percent[df$AGE>100 & df$AGE<120])
median(df$conifer_percent[df$AGE>120])
mean(df$conifer_percent[df$AGE>100 & df$AGE<120])
mean(df$conifer_percent[df$AGE>120])
mean(df$conifer_percent[df$AGE>100 & df$AGE<120])
mean(df$conifer_percent[df$AGE>80 & df$AGE<100])
mean(df$conifer_percent[df$AGE>60 & df$AGE<80])
mean(df$conifer_percent[df$AGE<60 & df$AGE>40])
mean(df$conifer_percent[df$AGE<40])
mean(df$conifer_percent[df$AGE>120])
length(df$conifer_percent[df$AGE>120])/nrow(df)*100
mean(df$conifer_percent[df$AGE>100 & df$AGE<120])# avg confier %: 62
length(df$conifer_percent[df$AGE>100 & df$AGE<120])/nrow(df)*100# % of polygons: 3.6
mean(df$conifer_percent[df$AGE>80 & df$AGE<100])# avg confier %: 62
length(df$conifer_percent[df$AGE>80 & df$AGE<100])/nrow(df)*100# % of polygons: 3.6
mean(df$conifer_percent[df$AGE>60 & df$AGE<80])# avg confier %: 62
length(df$conifer_percent[df$AGE>60 & df$AGE<80])/nrow(df)*100# % of polygons: 3.6
mean(df$conifer_percent[df$AGE<60 & df$AGE>40])# avg confier %: 62
length(df$conifer_percent[df$AGE<60 & df$AGE>40])/nrow(df)*100# % of polygons: 3.6
mean(df$conifer_percent[df$AGE<40]) # avg confier %: 48.9
length(df$conifer_percent[df$AGE<40])/nrow(df)*100 # % of
length(df$conifer_percent[df$AGE<40])/nrow(df)*100 # % of polygons: 16.9
length(df$conifer_percent[df$AGE<60 & df$AGE>40])/nrow(df)*100 # % of polygons: 11.5
length(df$conifer_percent[df$AGE>60 & df$AGE<80])/nrow(df)*100 # % of polygons: 8.6
length(df$conifer_percent[df$AGE>80 & df$AGE<100])/nrow(df)*100 # % of polygons: 6.8
length(df$conifer_percent[df$AGE>100 & df$AGE<120])/nrow(df)*100 # % of polygons: 1.9
length(df$conifer_percent[df$AGE>120])/nrow(df)*100 # % of polygons: 3.6
length(df$conifer_percent[df$AGE<=40])/nrow(df)*100 # % of polygons: 16.9
mean(df$conifer_percent[df$AGE>100 & df$AGE<=120])# avg confier %: 60
length(df$conifer_percent[df$AGE>100 & df$AGE<=120])/nrow(df)*100 # % of polygons: 1.9
hist(df$conifer_percent[df$AGE>100 & df$AGE<=120])
hist(df$conifer_percent[df$AGE>80 & df$AGE<=100])
mean(df$conifer_percent[df$AGE>80 & df$AGE<=100]) # avg confier %: 54
length(df$conifer_percent[df$AGE>80 & df$AGE<=100])/nrow(df)*100 # % of polygons: 6.8
hist(df$conifer_percent[df$AGE>60 & df$AGE<=80])
mean(df$conifer_percent[df$AGE>60 & df$AGE<=80]) # avg confier %: 51.8
length(df$conifer_percent[df$AGE>60 & df$AGE<=80])/nrow(df)*100 # % of polygons: 8.6
hist(df$conifer_percent[df$AGE<=60 & df$AGE>40])
mean(df$conifer_percent[df$AGE<=60 & df$AGE>40]) # avg confier %: 48.9
length(df$conifer_percent[df$AGE<=60 & df$AGE>40])/nrow(df)*100 # % of polygons: 11.5
hist(df$conifer_percent[df$AGE<=40])
mean(df$conifer_percent[df$AGE<=40]) # avg confier %: 47.5
length(df$conifer_percent[df$AGE<=40])/nrow(df)*100 # % of polygons: 16.9
length(df$conifer_percent[df$AGE>120])/nrow(df)*100 # % of polygons: 3.6
length(df$conifer_percent[df$AGE>100 & df$AGE<=120])/nrow(df)*100 # % of polygons: 9.9
hist(df$AGE[df$conifer_percent>79])
df$AGE[df$conifer_percent>79]
df$AGE[df$conifer_percent>60]
length(df$AGE[df$conifer_percent>60])
table(df$conifer_percent)
hist(df$AGE[df$conifer_percent>60])
mean(df$AGE[df$conifer_percent>60])
median(df$AGE[df$conifer_percent>60])
table(df$AGE[df$conifer_percent>60])
shiny::runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
shiny::runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
shiny::runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
shiny::runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
?material_column
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
### WATER CHEMISTRY #################################
water_chem_sidebar <- HTML(paste0(
tags$h1("Water Chemistry"),
tags$br(),
tags$p("The lands and waters of our Denésu&lstrok;ine territory are central to our Dené culture, identity and well-being. The rivers, lakes, and wetlands on our territory are essential to the well-being of our future generations and their ability to sustain our culture in a changing world. We are committed to caring for our waters."),
tags$blockquote(tags$em("I don’t like the way the water is. This is always the main thing, always the water. What is going to happen when the water keeps going down? Where are we going to get clear water? Where are we going to get water from?...We used to just catch a fish and cook it, right on the fire. Now we can’t do that anymore. Have to worry about if it is okay to eat fish anymore.
"), tags$br(),tags$br(),
tags$p(" - Janet Daskovitch, ACFN, 2012")),
tags$p("Environmental water quality monitoring provides our Nation with data and information to help protect our waters. The ACFN Community Based Monitoring staff take weekly water chemistry readings. These are split into an open water dataset, and a winter dataset where measurements are taken below the ice."),
tags$p("Good water quality contributes to healthy ecosystems that support fish, birds, plants, and human health."),
tags$br(),
actionLink(inputId = "water_chem_exp_data", label = tags$b("EXPLORE THE DATA")),
tags$br(),
tags$br(),
tags$img(src = "6.jpg", width = "80%", style = "display: block; margin: 0 auto;")
))
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
html(&lstrok;)
html("&lstrok;")
HTML("&lstrok;")
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
### WATER CHEMISTRY #################################
water_chem_sidebar <- HTML(paste0(
tags$h1("Water Chemistry"),
tags$br(),
tags$p("The lands and waters of our Denésu&lstrok;ine territory are central to our Dené culture, identity and well-being. The rivers, lakes, and wetlands on our territory are essential to the well-being of our future generations and their ability to sustain our culture in a changing world. We are committed to caring for our waters."),
tags$blockquote(tags$em("I don’t like the way the water is. This is always the main thing, always the water. What is going to happen when the water keeps going down? Where are we going to get clear water? Where are we going to get water from?...We used to just catch a fish and cook it, right on the fire. Now we can’t do that anymore. Have to worry about if it is okay to eat fish anymore.
"), tags$br(),tags$br(),
tags$p(" - Janet Daskovitch, ACFN, 2012")),
tags$p("Environmental water quality monitoring provides our Nation with data and information to help protect our waters. The ACFN Community Based Monitoring staff take weekly water chemistry readings. These are split into an open water dataset, and a winter dataset where measurements are taken below the ice."),
tags$p("Good water quality contributes to healthy ecosystems that support fish, birds, plants, and human health."),
tags$br(),
actionLink(inputId = "water_chem_exp_data", label = tags$b("EXPLORE THE DATA")),
tags$br(),
tags$br(),
tags$img(src = "6.jpg", width = "80%", style = "display: block; margin: 0 auto;")
))
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
### WATER CHEMISTRY #################################
water_chem_sidebar <- HTML(paste0(
tags$h1("Water Chemistry"),
tags$br(),
"The lands and waters of our Denésu",HTML("&lstrok;"),"ine territory are central to our Dené culture, identity and well-being. The rivers, lakes, and wetlands on our territory are essential to the well-being of our future generations and their ability to sustain our culture in a changing world. We are committed to caring for our waters.",
tags$blockquote(tags$em("I don’t like the way the water is. This is always the main thing, always the water. What is going to happen when the water keeps going down? Where are we going to get clear water? Where are we going to get water from?...We used to just catch a fish and cook it, right on the fire. Now we can’t do that anymore. Have to worry about if it is okay to eat fish anymore.
"), tags$br(),tags$br(),
tags$p(" - Janet Daskovitch, ACFN, 2012")),
tags$p("Environmental water quality monitoring provides our Nation with data and information to help protect our waters. The ACFN Community Based Monitoring staff take weekly water chemistry readings. These are split into an open water dataset, and a winter dataset where measurements are taken below the ice."),
tags$p("Good water quality contributes to healthy ecosystems that support fish, birds, plants, and human health."),
tags$br(),
actionLink(inputId = "water_chem_exp_data", label = tags$b("EXPLORE THE DATA")),
tags$br(),
tags$br(),
tags$img(src = "6.jpg", width = "80%", style = "display: block; margin: 0 auto;")
))
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
### WATER CHEMISTRY #################################
water_chem_sidebar <- HTML(paste0(
tags$h1("Water Chemistry"),
tags$br(),
"The lands and waters of our Denésu",HTML("&lstrok;"),"ine territory are central to our Dené culture, identity and well-being. The rivers, lakes, and wetlands on our territory are essential to the well-being of our future generations and their ability to sustain our culture in a changing world. We are committed to caring for our waters.",
tags$blockquote(tags$em("I don’t like the way the water is. This is always the main thing, always the water. What is going to happen when the water keeps going down? Where are we going to get clear water? Where are we going to get water from?...We used to just catch a fish and cook it, right on the fire. Now we can’t do that anymore. Have to worry about if it is okay to eat fish anymore.
"), tags$br(),tags$br(),
tags$p(" - Janet Daskovitch, ACFN, 2012")),
tags$img(src = "dry_fish.jpg", width = "60%", style = "display: block; margin: 0 auto;"),
tags$p("Environmental water quality monitoring provides our Nation with data and information to help protect our waters. The ACFN Community Based Monitoring staff take weekly water chemistry readings. These are split into an open water dataset, and a winter dataset where measurements are taken below the ice."),
tags$p("Good water quality contributes to healthy ecosystems that support fish, birds, plants, and human health."),
tags$br(),
actionLink(inputId = "water_chem_exp_data", label = tags$b("EXPLORE THE DATA")),
tags$br(),
tags$br(),
tags$img(src = "rene.jpg", width = "80%", style = "display: block; margin: 0 auto;")
))
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
### WATER CHEMISTRY #################################
water_chem_sidebar <- HTML(paste0(
tags$h1("Water Chemistry"),
tags$br(),
"The lands and waters of our Denésu",HTML("&lstrok;"),"ine territory are central to our Dené culture, identity and well-being. The rivers, lakes, and wetlands on our territory are essential to the well-being of our future generations and their ability to sustain our culture in a changing world. We are committed to caring for our waters.",
tags$br(),
tags$br(),
tags$blockquote(tags$em("I don’t like the way the water is. This is always the main thing, always the water. What is going to happen when the water keeps going down? Where are we going to get clear water? Where are we going to get water from?...We used to just catch a fish and cook it, right on the fire. Now we can’t do that anymore. Have to worry about if it is okay to eat fish anymore.
"),
tags$br(),
tags$br(),
tags$p(" - Janet Daskovitch, ACFN, 2012")),
tags$img(src = "dry_fish.jpg", width = "80%", style = "display: block; margin: 0 auto;"),
tags$br(),
tags$br(),
tags$p("Environmental water quality monitoring provides our Nation with data and information to help protect our waters. The ACFN Community Based Monitoring staff take weekly water chemistry readings. These are split into an open water dataset, and a winter dataset where measurements are taken below the ice."),
tags$p("Good water quality contributes to healthy ecosystems that support fish, birds, plants, and human health."),
actionLink(inputId = "water_chem_exp_data", label = tags$b("EXPLORE THE DATA")),
tags$br(),
tags$br(),
tags$img(src = "rene.jpg", width = "80%", style = "display: block; margin: 0 auto;")
))
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
shiny::runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
s = "Pine Channel"
s = "Pine Channel"
p = "Vanadium (ug/L)"
y_mean <- wl_site_thr$mean[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # mean
y_up <- wl_site_thr$up_thresh[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # upper threshold
y_low <- wl_site_thr$low_thresh[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # lower threshold
max_val <- max(c(water_lab_means$upper_sd[water_lab_means$Site==s & water_lab_means$Parameter == p  & !is.na(water_lab_means$upper_sd)]), 0) # maximum sd error bar value. If no records return 0.
min_val <- min(c(water_lab_means$lower_sd[water_lab_means$Site==s & water_lab_means$Parameter == p  & !is.na(water_lab_means$lower_sd)]), max_val)
y_mean
y_up
wl_site_thr
p = "Uranium (ug/L)"
y_mean <- wl_site_thr$mean[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # mean
y_up <- wl_site_thr$up_thresh[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # upper threshold
y_low <- wl_site_thr$low_thresh[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # lower threshold
max_val <- max(c(water_lab_means$upper_sd[water_lab_means$Site==s & water_lab_means$Parameter == p  & !is.na(water_lab_means$upper_sd)]), 0) # maximum sd error bar value. If no records return 0.
min_val <- min(c(water_lab_means$lower_sd[water_lab_means$Site==s & water_lab_means$Parameter == p  & !is.na(water_lab_means$lower_sd)]), max_val)
y_mean
s = "All sites"
y_mean <- wl_site_thr$mean[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # mean
y_mean
s = "Flett Creek"
p = "Uranium (ug/L)"
y_mean <- wl_site_thr$mean[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # mean
y_up <- wl_site_thr$up_thresh[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # upper threshold
y_low <- wl_site_thr$low_thresh[wl_site_thr$Site==s & wl_site_thr$Parameter == p] # lower threshold
max_val <- max(c(water_lab_means$upper_sd[water_lab_means$Site==s & water_lab_means$Parameter == p  & !is.na(water_lab_means$upper_sd)]), 0) # maximum sd error bar value. If no records return 0.
min_val <- min(c(water_lab_means$lower_sd[water_lab_means$Site==s & water_lab_means$Parameter == p  & !is.na(water_lab_means$lower_sd)]), max_val)
min_val
y_mean
y_range <- get_y_range(y_mean = y_mean,
y_up = y_up,
y_low = y_low,
max_val = max_val,
min_val = min_val,
show_guideline = show_guideline,
guideline = guideline,
zero_offset = -(y_up - y_mean)/100*5)
y_range
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
runApp('C:/Users/MAEDW7/Dropbox (BEACONs)/Marc_NotShared/MCFN/shiny_tool/git/ACFN_water_quality')
citation()
setwd("C:/Users/MAEDW7/Desktop/casfri_website")
rmarkdown::render_site()
