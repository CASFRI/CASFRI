rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(orig_stand_id);notEmpty(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, '', orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,INVENTORY_ID,text,notEmpty(inventory_id),copyText(inventory_id),Copies source value,TRUE
3,ORIG_STAND_ID,text,notNull(orig_stand_id),copyText(orig_stand_id),Copies source value to ORIG_STAND_ID,TRUE
4,STAND_STRUCTURE,text,"hasCountOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2}, 1, 'FALSE'|NOT_APPLICABLE)","ifElseCountOfNotNullText({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2}, 2, 1, 'SINGLE_LAYERED', 'MULTI_LAYERED')","Validation catches rows with no forest info and returns NOT_APPLICABLE. Translation runs countOfNotNull for the two forest layers. If one layer, returns SINGLE_LAYERED, if two layers returns MULTI_LAYERED. Note that source attributes l1vs and l2vs report the number of canopy layers within the Dominant or Secondary layer. Since the species information is not split between these multiple canopy layers we assume Dominant and Secondary are single layers for the purpose of CASFRI. Dummy names used where values need to be mapped to two different attributes.",TRUE
5,NUM_OF_LAYERS,integer,"nb_hasCountOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2}, wc, slu, water_code, 1, FALSE|-8886)","nb_countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2}, wc, slu, water_code, 3)","Counts number of layers based on the presence of a not null value for attributes representing each layer. Assumes valid LYR1 row must have l1s1 or l1s2 or l1s3 or l1s4 or l1s5, or a wc value of FW indicating a non-productive TREED_MUSKEG layer. LYR2 must have l2s1 or l2s2 or l2s3 or l2s4 or l2s5, NFL must have nfl value from slu or water_code. Only 1 NFL layer possible per polygon. l1s1 can be null when l2s1 has a value. Validation returns UNKNOWN_VALUE is NUM_OF_LAYERS is zero.",TRUE
6,MAP_SHEET_ID,text,false(),nothingText(),Attribute does not occur,TRUE
7,CASFRI_AREA,double precision,"geoIsValid(wkb_geometry, TRUE)",geoArea(wkb_geometry),Validates geometry then calculates area,TRUE
8,CASFRI_PERIMETER,double precision,"geoIsValid(wkb_geometry, TRUE)",geoPerimeter(wkb_geometry),Validates geometry then calculates perimeter,TRUE
9,SRC_INV_AREA,double precision,"notNull(src_inv_area);isNumeric(src_inv_area);isGreaterThan(src_inv_area, 0, FALSE)","divideDouble(src_inv_area, 10000)",Converts source area from m2 to ha. Return OUT_OF_RANGE for any zero values.,TRUE
10,STAND_PHOTO_YEAR,integer,"notNull({stand_photo_year, l1_photo_year, l2_photo_year}, TRUE);coalesceIsInt({stand_photo_year, l1_photo_year, l2_photo_year}, TRUE);coalesceIsBetween({stand_photo_year, l1_photo_year, l2_photo_year}, 1900, 2020, TRUE, TRUE, TRUE)","coalesceInt({stand_photo_year, l1_photo_year, l2_photo_year}, TRUE)",Copies the first non-NULL source value (from datayr for NB01 and from l1datayr and l2datayr for NB02) to STAND_PHOTO_YEAR,TRUE
