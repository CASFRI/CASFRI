rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"notEmpty({nat_non, anth_veg, anth_non, nfl}, TRUE)",NA,"Translate only rows where nat_non, anth_veg, anth_non or nfl is not empty. Note that none of these rows have sp1 info so every polygon is either LYR or NFL.", TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);notEmpty(soil_moist_reg);matchList(soil_moist_reg,{'a','A','d','D','m','M','w','W'})","mapText(soil_moist_reg, {'a','A','d','D','m','M','w','W'}, {'AQUATIC','AQUATIC','DRY','DRY','MESIC','MESIC','WET','WET'})",Soil moisture applies to all vegetated land cover types. Maps source value to SOIL_MOIST_REG using lists of values,TRUE
3,STRUCTURE_PER,integer,"matchList({stand_structure, struc_val}, {'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'S0', 'M0', 'M', 'MO', 'M2', '0'}|-8887)","mapInt({stand_structure, struc_val}, {'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'C0', 'C1', 'C2', 'C3', 'C4', 'C5', 'C6', 'C7', 'C8', 'C9', 'S0', 'S1', 'S2', 'S3', 'S4', 'S5', 'S6', 'S7', 'S8', 'S9', 'M0', 'M1', 'M2', 'M3', 'M4', 'M5', 'M6', 'M7', 'M8', 'M9', 'M', 'MO', '0'}, {10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100})","Concatenate stand structure letter and structure percent value. Check value is in the possible list of values, if not return NOT_APPLICABLE. Tthen map to correct value.",TRUE
4,LAYER,integer,true(),"countOfNotNull({species_1_layer1}, {species_1_layer2}, {nfl_layer, anth_veg_layer, anth_non_layer, nat_non_layer}, {unfl_layer, uanth_veg_layer, uanth_non_layer, unat_non_layer}, layer, 'FALSE')",Count layers up to max_layer_number which is set by the createMappingsView() function in the workflow. NFL rows will be reported below any LYR rows.,TRUE
5,LAYER_RANK,integer,true(),copyInt(layer_rank),"Layer rank is assigned as 1 for overstory layer (e.g. nat_non), and 2 for understory layer (e.g. unat_non).",TRUE
6,CROWN_CLOSURE_UPPER,integer,"notNull(nfl|-8887);notEmpty(nfl|-8887);matchList(nfl, {'SO', 'SC'}|-8887);notNull(nfl_crown_closure);notEmpty(nfl_crown_closure|-8888);isInt(nfl_crown_closure|-9997);matchList(nfl_crown_closure, {1,2,3,4,5,6,7,8,9,10}|-9999)","mapInt(nfl_crown_closure, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",NFL crown closure reported for shrub layers only as the percentage of polygon covered by shrub.,TRUE
7,CROWN_CLOSURE_LOWER,integer,"notNull(nfl|-8887);notEmpty(nfl|-8887);matchList(nfl, {'SO', 'SC'}|-8887);notNull(nfl_crown_closure);notEmpty(nfl_crown_closure|-8888);isInt(nfl_crown_closure|-9997);matchList(nfl_crown_closure, {1,2,3,4,5,6,7,8,9,10}|-9999)","mapInt(nfl_crown_closure, {1,2,3,4,5,6,7,8,9,10}, {10,20,30,40,50,60,70,80,90,100})",NFL crown closure reported for shrub layers only as the percentage of polygon covered by shrub.,TRUE
8,HEIGHT_UPPER,double precision,"notNull(nfl|-8887);notEmpty(nfl|-8887);matchList(nfl, {'SO', 'SC'}|-8887);notNull(nfl_height);isNumeric(nfl_height|-9997);isBetween(nfl_height,1,100)",copyDouble(nfl_height),"Height descriptors of 1 m to 6 m will only apply to shrub cover. If nfl is shrub, height value is < 6 and is the height of the shrub layer.",TRUE
9,HEIGHT_LOWER,double precision,"notNull(nfl|-8887);notEmpty(nfl|-8887);matchList(nfl, {'SO', 'SC'}|-8887);notNull(nfl_height);isNumeric(nfl_height|-9997);isBetween(nfl_height,1,100)",copyDouble(nfl_height),"Height descriptors of 1 m to 6 m will only apply to shrub cover. If nfl is shrub, height value is < 6 and is the height of the shrub layer. All layers identified as shrub do not have forest info.",TRUE
10,NAT_NON_VEG,text,"notNull(nat_non);notEmpty(nat_non);matchList(nat_non,{'NMB','NWF','NWL','NWI','NWR','NMC','NMR','NMS','MB','MC','MS','WF','WL','WR','NMG','NMM'})","mapText(nat_non, {'NMB','NWF','NWL','NWI','NWR','NMC','NMR','NMS','MB','MC','MS','WF','WL','WR','NMG','NMM'}, {'EXPOSED_LAND','FLOOD','LAKE','SNOW_ICE','RIVER','EXPOSED_LAND','ROCK_RUBBLE','SAND','EXPOSED_LAND','ROCK_RUBBLE','WATER_SEDIMENT','FLOOD','LAKE','RIVER','SAND','ROCK_RUBBLE'})","Height descriptors of 1 m to 6 m will only apply to shrub cover. If nfl is shrub, height value is < 6 and is the height of the shrub layer. All layers identified as shrub do not have forest info.",TRUE
11,NON_FOR_ANTH,text,"notNull({anth_veg, anth_non}, TRUE);notEmpty({anth_veg, anth_non}, TRUE);hasCountOfNotNull({anth_veg, anth_non}, 1, TRUE|UNKNOWN_VALUE);matchListTwice(anth_veg, anth_non, {'CIP','CIW','CA','CP','CPR','IG','IH','II','SR','CIU'}, {'ASC','ASR','AIG','AIH','AIE','AIF','AIM','AII','IW','PR','IP','P','A','AIU','AIW'})","mapTextNotNullIndex(anth_veg, {'CIP','CIW','CA','CP','CPR','IG','IH','II','SR','CIU'}, {'FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','CULTIVATED','CULTIVATED','CULTIVATED','INDUSTRIAL','FACILITY_INFRASTRUCTURE','INDUSTRIAL','SETTLEMENT','FACILITY_INFRASTRUCTURE'}, anth_non, {'ASC','ASR','AIG','AIH','AIE','AIF','AIM','AII','IW','PR','IP','P','A','AIU','AIW'}, {'SETTLEMENT','SETTLEMENT','INDUSTRIAL','FACILITY_INFRASTRUCTURE','INDUSTRIAL','CULTIVATED','INDUSTRIAL','INDUSTRIAL','CULTIVATED','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','CULTIVATED','CULTIVATED','OTHER','OTHER'}, 1)","Runs the mapping for whichever value attribute has the value. Validation functions check that both values are not null or empty, and exactly one input has a value, and that the value is in anth_veg or anth_non. Note the source value CPR indicates rough pasture and is translated to CULTIVATED. This is always accompanied by SO or SC with associated shrub extent and height. The shrub component gets translated as TALL_SHRUB or LOW_SHRUB in the same row as CULTIVATED to indicate they are paired and occur in the same layer. Note there are a small number of other rows that have two NFL values per row. With the current workflow we can either return one NFL per row, or we have to leave them all on the same row. We can't do both. So there will be some NFL rows that contain multiple values. Currently this only effects 10 rows in AB25 and AB29.",TRUE
12,NON_FOR_VEG,text,"notNull(nfl);notEmpty(nfl);matchList(nfl,{'HF','HG','SC','SO','BR'})","avi01_non_for_veg_translation(nfl, nfl_height)","Converts SO and SC to LOW_SHRUB if height is less than 2m. TALL_SHRUB if height is 2m or more. Maps HF to FORBS, HG to graminoids, and BR to BRYOID",TRUE
