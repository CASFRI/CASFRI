rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"hasNFLInfo(inventory_id, {nfl_att1, nfl_att2, nfl_att3}, {filter1, filter2, filter3, filter4, filter5}|NOT_APPLICABLE)",NA,"Multiple NFL records can occur on the same row, so we split them into separate translations by using different rows in the attribute_dependencies table. hasNFLInfo filters rows only for the NFL attribute being translated by running the validation functions for either nat_non_veg, non_for_anth or non_for_veg. The first string list argument controls which validations to run (nat_non_veg, non_for_anth or non_for_veg) and the second string list takes the source attributes required to run the validations.", TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moisture_regime);matchList(soil_moisture_regime,{0,1,2,3,4,5,6,7,8})","mapText(soil_moisture_regime, {0,1,2,3,4,5,6,7,8}, {'DRY','DRY','DRY','MESIC','MESIC','MOIST','MOIST','WET','WET'})",Report the polygon level soil moisture value which is associated with the land cover class with the greatest area.,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure_per is always 100,TRUE
4,LAYER,integer,true(),"vri01_countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1, species_6_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2, species_6_layer2}, inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd, non_veg_cover_type_1, layer)","Custom function counts number of layers based on the presence of a not null value for attributes representing each layer. Assumes valid LYR1 row must have species_cd_1 or species_cd_2 or species_cd_3 or species_cd_4 or species_cd_5 or species_cd_6. For the NFL attributes, presence of not null values is not sufficient. The custom function runs the NFL functions vri01_non_for_veg_validation, vri01_nat_non_veg_validation and vri01_non_for_anth_validation to see if there is an nfl value present based on the input values. If there is, one layer is added to the count for each NFL present.",TRUE
5,LAYER_RANK,integer,false(),nothingInt(),No rank for nfl layers.,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
10,NAT_NON_VEG,text,"notNull(inventory_standard_cd_layer1|NOT_APPLICABLE);notEmpty(inventory_standard_cd_layer1|NOT_APPLICABLE);matchList(inventory_standard_cd_layer1,{'V','I','F'});hasCountOfNotNull({inventory_standard_cd_layer1, land_cover_class_cd_1_layer1, bclcs_level_4_layer1, non_productive_descriptor_cd_layer1, non_veg_cover_type_1_layer1}, 1, FALSE);vri01_nat_non_veg_validation(inventory_standard_cd_layer1, land_cover_class_cd_1_layer1, bclcs_level_4_layer1, non_productive_descriptor_cd_layer1, non_veg_cover_type_1_layer1)","vri01_nat_non_veg_translation(inventory_standard_cd_layer1, land_cover_class_cd_1_layer1, bclcs_level_4_layer1, non_productive_descriptor_cd_layer1, non_veg_cover_type_1_layer1)","Validation checks inventory id is not null and in set, and that at least one input variable value is present. Then checks that a valid combination of values is available to do the translation. Translation function maps source landcover types to CASFRI types for inventory standards V and I, first using the non_veg_cover_type_1 column, if still null then using the land_cover_class_cd_1 column, then if still null using the bclcs_level_4 column. For inventory standard F, maps using non_productive_descriptor_cd then bclcs_level_4. Returns NULL if not nat_non_veg, or if none of the mappings are realized. Generic translation error returned if error encountered. Attributes use the _layer1 mappings to distinguish from the other NFL rows, allows one NFL attribute to be translated per translation. Note that we only use the land_cover_class_cd variable with the largest area. This is land_cover_class_cd_1. There is also land_cover_class_cd_2 and land_cover_class_cd_3 but these are horizontal components which we cannot accomodate along with the vertical structure we already have in BC.",TRUE
11,NON_FOR_ANTH,text,"notNull(inventory_standard_cd_layer2|NOT_APPLICABLE);notEmpty(inventory_standard_cd_layer2|NOT_APPLICABLE);matchList(inventory_standard_cd_layer2,{'V','I','F'});hasCountOfNotNull({inventory_standard_cd_layer2, land_cover_class_cd_1_layer2, non_productive_descriptor_cd_layer2, non_veg_cover_type_1_layer2}, 1, FALSE);vri01_non_for_anth_validation(inventory_standard_cd_layer2, land_cover_class_cd_1_layer2, non_productive_descriptor_cd_layer2, non_veg_cover_type_1_layer2)","vri01_non_for_anth_translation(inventory_standard_cd_layer2, land_cover_class_cd_1_layer2, non_productive_descriptor_cd_layer2, non_veg_cover_type_1_layer2)","Validation checks inventory id is not null and in set, and that at least one input variable value is present. Then checks that a valid combination of values is available to do the translation. Translation function maps source landcover types to CASFRI types for inventory standards V and I, first using the non_veg_cover_type_1 column, then if still null using the land_cover_class_cd_1 column. For inventory standard F, maps using non_productive_descriptor_cd. Returns NULL if not non_for_anth, or if none of the mappings are realized. Generic translation error returned if error encountered. Attributes use the _layer2 mappings to distinguish from the other NFL rows, allows one NFL attribute to be translated per translation. Note that we only use the land_cover_class_cd variable with the largest area. This is land_cover_class_cd_1. There is also land_cover_class_cd_2 and land_cover_class_cd_3 but these are horizontal components which we cannot accomodate along with the vertical structure we already have in BC.",TRUE
12,NON_FOR_VEG,text,"notNull(inventory_standard_cd_layer3|NOT_APPLICABLE);notEmpty(inventory_standard_cd_layer3|NOT_APPLICABLE);matchList(inventory_standard_cd_layer3,{'V','I','F'});hasCountOfNotNull({inventory_standard_cd_layer3, land_cover_class_cd_1_layer3, bclcs_level_4_layer3, non_productive_descriptor_cd_layer3}, 1, FALSE);vri01_non_for_veg_validation(inventory_standard_cd_layer3, land_cover_class_cd_1_layer3, bclcs_level_4_layer3, non_productive_descriptor_cd_layer3)","vri01_non_for_veg_translation(inventory_standard_cd_layer3, land_cover_class_cd_1_layer3, bclcs_level_4_layer3, non_productive_descriptor_cd_layer3)","Validation checks inventory id is not null and in set, and that at least one input variable value is present. Then checks that a valid combination of values is available to do the translation. Translation function maps source landcover types to CASFRI types for inventory standards V and I, first using the land_cover_class_cd_1 column, then if still null using the bclcs_level_4 column. For inventory standard F, maps using non_productive_descriptor_cd then bclcs_level_4. Returns NULL if not non_for_veg, or if non of the mappings are realized. Generic translation error returned if error encountered. Attributes use the _layer3 mappings to distinguish from the other NFL rows, allows one NFL attribute to be translated per translation. Note that we only use the land_cover_class_cd variable with the largest area. This is land_cover_class_cd_1. There is also land_cover_class_cd_2 and land_cover_class_cd_3 but these are horizontal components which we cannot accomodate along with the vertical structure we already have in BC.",TRUE
