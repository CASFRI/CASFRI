rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(map_id);notNull(feature_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_id, feature_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moisture_regime_1);matchList(soil_moisture_regime_1,{0,1,2,3,4,5,6,7,8})","mapText(soil_moisture_regime_1, {0,1,2,3,4,5,6,7,8}, {'D','D','D','F','F','M','M','W','W'})",Maps source value to SOIL_MOIST_REG using lists of values,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure_per is always 100,TRUE
4,LAYER,integer,true(),"vri01_countOfNotNull({species_cd_1, species_cd_2, species_cd_3, species_cd_4, species_cd_5, species_cd_6}, {dummy1, dummy2, dummy3, dummy4, dummy5, dummy6}, inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd, non_veg_cover_type_1, max_layer_number, 'FALSE')","Count layers up to max_layer_number which is set by the createMappingsView() function in the workflow. Dummy variables are used here and in attribute_dependencies.csv to allow different numbers of variables to be used in BC08 and BC10. Custom function counts number of layers based on the presence of a not null value for attributes representing each layer. Assumes valid LYR1 row must have species_cd_1 or species_cd_2 or species_cd_3 or species_cd_4 or species_cd_5 or species_cd_6. Layer 2 only available for BC10, in BC08 the dummy variables get mapped to NULL. For the NFL attributes, presence of not null values is not sufficient. The custom function runs the NFL functions vri01_non_for_veg_validation, vri01_nat_non_veg_validation and vri01_non_for_anth_validation to see if there is an nfl value present based on the input values. If there is, one layer is added to the count.",TRUE
5,LAYER_RANK,integer,false(),nothingInt(),No rank for nfl layers.,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
10,NAT_NON_VEG,text,"notNull(inventory_standard_cd);notEmpty(inventory_standard_cd);matchList(inventory_standard_cd,{'V','I','F'});hasCountOfNotNull({inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd, non_veg_cover_type_1}, 1, 'FALSE');vri01_nat_non_veg_validation(inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd, non_veg_cover_type_1)","vri01_nat_non_veg_translation(inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd, non_veg_cover_type_1)","Validation checks inventory id is not null and in set, and that at least one input variable value is present. Then checks that a valid combination of values is available to do the translation. Translation function maps source landcover types to CASFRI types for inventory standards V and I, first using the non_veg_cover_type_1 column, if still null then using the land_cover_class_cd_1 column, then if still null using the bclcs_level_4 column. For inventory standard F, maps using non_productive_descriptor_cd then bclcs_level_4. Returns NULL if not naturally non-vegetated, or if none of the mappings are realized. Generic translation error returned if error encountered.",TRUE
11,NON_FOR_ANTH,text,"notNull(inventory_standard_cd);notEmpty(inventory_standard_cd);matchList(inventory_standard_cd,{'V','I','F'});hasCountOfNotNull({inventory_standard_cd, land_cover_class_cd_1, non_productive_descriptor_cd, non_veg_cover_type_1}, 1, 'FALSE');vri01_non_for_anth_validation(inventory_standard_cd, land_cover_class_cd_1, non_productive_descriptor_cd, non_veg_cover_type_1)","vri01_non_for_anth_translation(inventory_standard_cd, land_cover_class_cd_1, non_productive_descriptor_cd, non_veg_cover_type_1)","Validation checks inventory id not null and in set, and that at least one input variable value is present.  Then checks that a valid combination of values is available to do the translation. Translation function maps source landcover types to CASFRI types for inventory standards V and I, first using the non_veg_cover_type_1 column, then if still null using the land_cover_class_cd_1 column. For inventory standard F, maps using non_productive_descriptor_cd. Returns NULL if not naturally non-vegetated, or if none of the mappings are realized. Generic translation error returned if error encountered.",TRUE
12,NON_FOR_VEG,text,"notNull(inventory_standard_cd);notEmpty(inventory_standard_cd);matchList(inventory_standard_cd,{'V','I','F'});hasCountOfNotNull({inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd}, 1, 'FALSE');vri01_non_for_veg_validation(inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd)","vri01_non_for_veg_translation(inventory_standard_cd, land_cover_class_cd_1, bclcs_level_4, non_productive_descriptor_cd)","Validation checks inventory id not null and in set, and that at least one input variable value is present.  Then checks that a valid combination of values is available to do the translation. Translation function maps source landcover types to CASFRI types for inventory standards V and I, first using the land_cover_class_cd_1 column, then if still null using the bclcs_level_4 column. For inventory standard F, maps using non_productive_descriptor_cd then bclcs_level_4. Returns NULL if not naturally non-vegetated, or if non of the mappings are realized. Generic translation error returned if error encountered.",TRUE
