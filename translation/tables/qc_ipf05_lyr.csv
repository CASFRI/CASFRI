rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,notEmpty(species_1),NA,Translate row if it has species value for the layer, TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(geocode_1_10);notNull(geocode_11_20),"padConcat({inventory_id, src_filename, geocode_1_10, geocode_11_20, ''}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Concatenates five attributes to create CAS_ID. Geocode_1_10 and geocode_11_20 are the original geocode string split into the first ten and second ten characters. Commas are replaced with periods for use in the cas_id.,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);matchList(soil_moist_reg,{'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64'})
","mapText(soil_moist_reg, {'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64'}, {'DRY','DRY','DRY','DRY','DRY','DRY','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MOIST','MOIST','MOIST','MOIST','MOIST','WET','WET','WET','WET','WET','AQUATIC','AQUATIC','AQUATIC','AQUATIC','AQUATIC'})",Maps source codes to CASFRI codes. Report 16 as NOT_IN_SET,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),Structure_per should always be 100. No horizontal structure.,TRUE
4,STRUCTURE_RANGE,double precision,false(),nothingDouble(),Complex stands record height for the top layer only,TRUE
5,LAYER,integer,true(),"lyr_layer_translation({height_layer1, height_layer2}, {species_layer1}, {species_layer2}, layer)",Reorder the layers that exist in the polygon by height and return the index of the layer being processed,TRUE
6,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,TRUE
7,CROWN_CLOSURE_UPPER,integer,"notNull(crown_closure_upper);isInt(crown_closure_upper);isBetween(crown_closure_upper, 0, 100)",copyInt(crown_closure_upper),Copies source value to crown_closure_upper,TRUE
8,CROWN_CLOSURE_LOWER,integer,"notNull(crown_closure_lower);isInt(crown_closure_lower);isBetween(crown_closure_lower, 0, 100)",copyInt(crown_closure_lower),Copies source value to crown_closure_lower,TRUE
9,HEIGHT_UPPER,double precision,"notNull(height_upper);isNumeric(height_upper);isGreaterThan(height_upper, 0, FALSE|-8888);isBetween(height_upper,0,100)",copyDouble(height_upper),Copies source value to height_upper,TRUE
10,HEIGHT_LOWER,double precision,"notNull(height_lower);isNumeric(height_lower);isGreaterThan(height_lower, 0, FALSE|-8888);isBetween(height_lower,0,100)",copyDouble(height_lower),Copies source value to height_lower,TRUE
11,PRODUCTIVITY,text,false(),nothingText(),No productivity info,TRUE
12,PRODUCTIVITY_TYPE,text,false(),nothingText(),No productivity info,TRUE
13,SPECIES_1,text,"notNull(species_1);notEmpty(species_1);alphaNumericMatchList(species_1, {'xx', 'xxxx', 'xxxxxx', 'xx000', 'xx00xx00', 'xx00xx00xx00', 'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0', 'xx0xx0', 'xx0xx0xx0', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |INVALID_VALUE);matchtable(qc_prg5_species(species_1, 1), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_1, 1), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
14,SPECIES_PER_1,integer,"notNull(species_1);notEmpty(species_1);alphaNumericMatchList(species_1, {'xx', 'xxxx', 'xxxxxx', 'xx000', 'xx00xx00', 'xx00xx00xx00', 'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0', 'xx0xx0', 'xx0xx0xx0', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |-9997)","qc_prg5_species_per_translation(species_per_1, 1)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
15,SPECIES_2,text,"notNull(species_2);notEmpty(species_2);alphaNumericMatchList(species_2, {'xxxx', 'xxxxxx', 'xx00xx00', 'xx00xx00xx00', 'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0', 'xx0xx0xx0', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |NULL_VALUE);matchtable(qc_prg5_species(species_2, 2), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_2, 2), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
16,SPECIES_PER_2,integer,"notNull(species_2);notEmpty(species_2);alphaNumericMatchList(species_2, {'xxxx', 'xxxxxx', 'xx00xx00', 'xx00xx00xx00', 'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0', 'xx0xx0xx0', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |-8888)","qc_prg5_species_per_translation(species_per_2, 2)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
17,SPECIES_3,text,"notNull(species_3);notEmpty(species_3);alphaNumericMatchList(species_3, {'xxxxxx', 'xx00xx00xx00', 'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |NULL_VALUE);matchtable(qc_prg5_species(species_3, 3), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_3, 3), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
18,SPECIES_PER_3,integer,"notNull(species_3);notEmpty(species_3);alphaNumericMatchList(species_3, {'xxxxxx', 'xx00xx00xx00', 'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |-9997)","qc_prg5_species_per_translation(species_per_3, 3)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
19,SPECIES_4,text,"notNull(species_4);notEmpty(species_4);alphaNumericMatchList(species_4, {'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |NULL_VALUE);matchtable(qc_prg5_species(species_4, 4), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_4, 4), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
20,SPECIES_PER_4,integer,"notNull(species_4);notEmpty(species_4);alphaNumericMatchList(species_4, {'xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |-8888)","qc_prg5_species_per_translation(species_per_4, 4)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
21,SPECIES_5,text,"notNull(species_5);notEmpty(species_5);alphaNumericMatchList(species_5, {'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |NULL_VALUE);matchtable(qc_prg5_species(species_5, 5), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_5, 5), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
22,SPECIES_PER_5,integer,"notNull(species_5);notEmpty(species_5);alphaNumericMatchList(species_5, {'xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |-8888)","qc_prg5_species_per_translation(species_per_5, 5)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
23,SPECIES_6,text,"notNull(species_6);notEmpty(species_6);alphaNumericMatchList(species_6, {'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |NULL_VALUE);matchtable(qc_prg5_species(species_6, 6), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_6, 6), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
24,SPECIES_PER_6,integer,"notNull(species_6);notEmpty(species_6);alphaNumericMatchList(species_6, {'xx00xx00xx00xx00xx00xx00', 'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0xx0xx0', 'xx0xx0xx0xx0xx0xx0xx0'} |-8888)","qc_prg5_species_per_translation(species_per_6, 6)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
25,SPECIES_7,text,"notNull(species_7);notEmpty(species_7);alphaNumericMatchList(species_7, {'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0xx0xx0xx0'} |NULL_VALUE);matchtable(qc_prg5_species(species_7, 7), 'translation', 'species_code_mapping', 'qc_species_codes'|NOT_IN_SET)","lookupText(qc_prg5_species(species_7, 7), 'translation', 'species_code_mapping', 'qc_species_codes', 'casfri_species_codes')","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. Then check species code is in lookup table. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, translate the species code from the requested position using the lookup table. If the code is a normal species code with percent values (e.g. BF90BS10), reorder the species by percent and translate the requested species.",TRUE
26,SPECIES_PER_7,integer,"notNull(species_7);notEmpty(species_7);alphaNumericMatchList(species_7, {'xx00xx00xx00xx00xx00xx00xx00', 'xx0xx0xx0xx0xx0xx0xx0'} |-8888)","qc_prg5_species_per_translation(species_per_7, 7)","For validation, converts code to alpha numeric code where letters are x and integers are 0. Checks value matches an expected code from qc05 or qc07. For translation, first checks if the code is a species group code (e.g. FXFN) which have no percent values. If it is, for 3 species return 35, 35, 30. For 2 species return 65, 35. For 1 species return 100. If code is a normal code with species percent values (e.g. BF1BS9), reorder the species by percent, then gets the percent value from the requested position. If it's 0 return 100, if  less than 10 multiply by 10 (these are both specific to QC07). Otherwise just return the value (for QC05).",TRUE
27,SPECIES_8,text,false(),nothingText(),attribute does not occur,TRUE
28,SPECIES_PER_8,integer,false(),nothingInt(),attribute does not occur,TRUE
29,SPECIES_9,text,false(),nothingText(),attribute does not occur,TRUE
30,SPECIES_PER_9,integer,false(),nothingInt(),attribute does not occur,TRUE
31,SPECIES_10,text,false(),nothingText(),attribute does not occur,TRUE
32,SPECIES_PER_10,integer,false(),nothingInt(),attribute does not occur,TRUE
33,ORIGIN_UPPER,integer,"isInt(stand_photo_year|-8886);notNull(cl_age);notEmpty(cl_age);matchTable(cl_age, 'translation', 'qc_standstructure_lookup', 'source_val',TRUE|-9999)","qc_origin_translation(lookupInt(cl_age, 'translation', 'qc_standstructure_lookup', 'source_val', 'l1_age_origin', TRUE), stand_photo_year)","Map age using lookup table, then calculates origin as photo year minus age. ",TRUE
34,ORIGIN_LOWER,integer,"isInt(stand_photo_year|-8886);notNull(cl_age);notEmpty(cl_age);matchTable(cl_age, 'translation', 'qc_standstructure_lookup', 'source_val',TRUE|-9999)","qc_origin_translation(lookupInt(cl_age, 'translation', 'qc_standstructure_lookup', 'source_val', 'l1_age_origin', TRUE), stand_photo_year)","Map age using lookup table, then calculates origin as photo year minus age. ",TRUE
35,SITE_CLASS,text,false(),nothingText(),Attribute does not occur,TRUE
36,SITE_INDEX,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
