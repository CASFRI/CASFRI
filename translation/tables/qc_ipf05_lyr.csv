rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"isLessThanLookupDouble(layer, cl_age, 'translation', 'qc_standstructure_lookup', 'source_val', 'num_of_layers', TRUE)",NA,"Note we are using cl_age to filter LYR rows instead of notEmpt(species_1) due to issue #465. Forest polygons must have a cl_age value. Lookup the number of LYR layers in the lookup table, only run if the layer being translated is less than or equal to the num_of_layers. If polygon has 2 lyr layers, it should be translated for both layer 1 and 2, if polygon only has 1 lyr layer, it should not be translated when layer = 2.", TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, src_filename, ogc_fid, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);notMatchList(soil_moist_reg, 16|UNUSED_VALUE);matchList(soil_moist_reg,{'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64'})
","mapText(soil_moist_reg, {'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64'}, {'DRY','DRY','DRY','DRY','DRY','DRY','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MOIST','MOIST','MOIST','MOIST','MOIST','WET','WET','WET','WET','WET','AQUATIC','AQUATIC','AQUATIC','AQUATIC','AQUATIC'})",Maps source codes to CASFRI codes. Report 16 as UNUSED_VALUE,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure_per should always be 100,TRUE
4,STRUCTURE_RANGE,double precision,false(),nothingDouble(),Complex stands record height for the top layer only,TRUE
5,LAYER,integer,true(),"lyr_layer_translation({height_layer1, height_layer2}, {species_layer1}, {species_layer2}, layer)",Reorder the layers that exist in the polygon by height and return the index of the layer being processed,TRUE
6,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,TRUE
7,CROWN_CLOSURE_UPPER,integer,notNull(crown_closure_upper);isInt(crown_closure_upper),copyInt(crown_closure_upper),Copies source value to crown_closure_upper,TRUE
8,CROWN_CLOSURE_LOWER,integer,notNull(crown_closure_lower);isInt(crown_closure_lower),copyInt(crown_closure_lower),Copies source value to crown_closure_lower,TRUE
9,HEIGHT_UPPER,double precision,"notNull(height_upper);isNumeric(height_upper);isBetween(height_upper,0,100,FALSE,TRUE)",copyDouble(height_upper),Copies source value to height_upper,TRUE
10,HEIGHT_LOWER,double precision,"notNull(height_lower);isNumeric(height_lower);isBetween(height_lower,0,100,FALSE,TRUE)",copyDouble(height_lower),Copies source value to height_lower,TRUE
11,PRODUCTIVITY,text,false(|UNKNOWN_VALUE),nothingText(),No productivity info,TRUE
12,PRODUCTIVITY_TYPE,text,false(|UNKNOWN_VALUE),nothingText(),No productivity info,TRUE
13,SPECIES_1,text,"notNull(species_1);notEmpty(species_1);lengthMatchList(species_1, {5, 8, 12, 16, 20, 24, 28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_1, '1'|NOT APPLICABLE)","qc_prg5_species_translation(species_1, 1)",Maps source value to SPECIES_1 using lookup table,TRUE
14,SPECIES_PER_1,integer,"notNull(species_1);notEmpty(species_1);lengthMatchList(species_1, {5, 8, 12, 16, 20, 24, 28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_1, 1)",Copies source value to SPECIES_PER_1,TRUE
15,SPECIES_2,text,"notNull(species_2);notEmpty(species_2);lengthMatchList(species_2, {8, 12, 16, 20, 24, 28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_2, '2'|NOT APPLICABLE)","qc_prg5_species_translation(species_2, 2)",Maps source value to SPECIES_2 using lookup table,TRUE
16,SPECIES_PER_2,integer,"notNull(species_2);notEmpty(species_2);lengthMatchList(species_2, {8, 12, 16, 20, 24, 28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_2, 2)",Copies source value to SPECIES_PER_2,TRUE
17,SPECIES_3,text,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {12, 16, 20, 24, 28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_3, '3'|NOT APPLICABLE)","qc_prg5_species_translation(species_3, 3)",Maps source value to SPECIES_3 using lookup table,TRUE
18,SPECIES_PER_3,integer,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {12, 16, 20, 24, 28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_3, 3)",Copies source value to SPECIES_PER_3,TRUE
19,SPECIES_4,text,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {16, 20, 24, 28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_4, '4'|NOT APPLICABLE)","qc_prg5_species_translation(species_4, 4)",Maps source value to SPECIES_4 using lookup table,TRUE
20,SPECIES_PER_4,integer,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {16, 20, 24, 28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_4, 4)",Copies source value to SPECIES_PER_4,TRUE
21,SPECIES_5,text,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {20, 24, 28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_5, '5'|NOT APPLICABLE)","qc_prg5_species_translation(species_5, 5)",Maps source value to SPECIES_5 using lookup table,TRUE
22,SPECIES_PER_5,integer,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {20, 24, 28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_5, 5)",Copies source value to SPECIES_PER_5,TRUE
23,SPECIES_6,text,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {24, 28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_6, '6'|NOT APPLICABLE)","qc_prg5_species_translation(species_6, 6)",Maps source value to SPECIES_6 using lookup table,TRUE
24,SPECIES_PER_6,integer,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {24, 28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_6, 6)",Copies source value to SPECIES_PER_6,TRUE
25,SPECIES_7,text,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {28, 32, 36, 40}, |NOT_APPLICABLE);qc_prg5_species_matchTable_validation(species_7, '7'|NOT APPLICABLE)","qc_prg5_species_translation(species_7, 7)",Maps source value to SPECIES_7 using lookup table,TRUE
26,SPECIES_PER_7,integer,"notNull(species_3);notEmpty(species_3);lengthMatchList(species_3, {28, 32, 36, 40}, |-8887)","qc_prg5_species_per_translation(species_per_7, 7)",Copies source value to SPECIES_PER_7,TRUE
27,SPECIES_8,text,false(),nothingText(),attribute does not occur,TRUE
28,SPECIES_PER_8,integer,false(),nothingInt(),attribute does not occur,TRUE
29,SPECIES_9,text,false(),nothingText(),attribute does not occur,TRUE
30,SPECIES_PER_9,integer,false(),nothingInt(),attribute does not occur,TRUE
31,SPECIES_10,text,false(),nothingText(),attribute does not occur,TRUE
32,SPECIES_PER_10,integer,false(),nothingInt(),attribute does not occur,TRUE
33,ORIGIN_UPPER,integer,"isInt(stand_photo_year|-8886);notNull(cl_age);notEmpty(cl_age);matchTable(cl_age, 'translation', 'qc_standstructure_lookup', 'source_val','TRUE')","qc_origin_translation(cl_age, stand_photo_year)","Map age using lookup table, then calculates origin as photo year minus age. ",TRUE
34,ORIGIN_LOWER,integer,"isInt(stand_photo_year|-8886);notNull(cl_age);notEmpty(cl_age);matchTable(cl_age, 'translation', 'qc_standstructure_lookup', 'source_val','TRUE')","qc_origin_translation(cl_age, stand_photo_year)","Map age using lookup table, then calculates origin as photo year minus age. ",TRUE
35,SITE_CLASS,text,false(),nothingText(),Attribute does not occur,TRUE
36,SITE_INDEX,double precision,false(),nothingDouble(),attribute does not occur,TRUE
