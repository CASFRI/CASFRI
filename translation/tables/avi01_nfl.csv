rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(trm_1);notNull(poly_num);notNull(ogc_fid),"padConcat({inventory_id, src_filename, trm_1, poly_num, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(moist_reg);matchList(moist_reg,{'a','A','d','D','m','M','w','W'})","mapText(moist_reg, {'a','A','d','D','m','M','w','W'}, {'A','A','D','D','F','F','W','W'})",Maps source value to SOIL_MOIST_REG using lists of values,TRUE
3,STRUCTURE_PER,integer,"matchList({struc, struc_val}, {'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'C3', 'C4', 'C6', 'C7', 'C8', 'C9', 'S0', 'M0', 'M', 'MO', '0', ' 0'})","mapInt({struc, struc_val}, {'H1', 'H2', 'H3', 'H4', 'H5', 'H6', 'H7', 'H8', 'H9', 'C3', 'C4', 'C6', 'C7', 'C8', 'C9', 'S0', 'M0', 'M', 'MO', '0', ' 0'}, {1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0})","Concatenate stand structure letter and structure percent value, then map to correct value.",TRUE
4,LAYER,integer,true(),"NumberOfNotNull({dummy1}, {dummy2}, {dummy3, dummy4, dummy5, dummy6}, {dummy7, dummy8, dummy9, dummy10}, max_layer_number)",Count layers up to max_layer_number which is set by the createMappingsView() function in the workflow. Dummy variables are used here and in attribute_dependencies.csv to avoid two sets of values (sp1 and usp1) being mapped to the same column (sp1),TRUE
5,LAYER_RANK,integer,true(),copyInt(layer_rank),Copy value of 1 to LAYER_RANK,TRUE
6,CROWN_CLOSURE_UPPER,integer,"notNull(density);matchList(density,{'A','B','C','D'})","mapInt(density, {'A','B','C','D'}, {30,50,70,100})",Maps source value to CROWN_CLOSURE_UPPER using lists of values,TRUE
7,CROWN_CLOSURE_LOWER,integer,"notNull(density);matchList(density,{'A','B','C','D'})","mapInt(density, {'A','B','C','D'}, {6,31,51,71})",Maps source value to CROWN_CLOSURE_LOWER using lists of values,TRUE
8,HEIGHT_UPPER,double precision,"notNull(height);isNumeric(height);isGreaterThan(height,1);isLessThan(height,100)",copyDouble(height),Copies source value to HEIGHT_UPPER,TRUE
9,HEIGHT_LOWER,double precision,"notNull(height);isNumeric(height);isGreaterThan(height,1);isLessThan(height,100)",copyDouble(height),Copies source value to HEIGHT_LOWER,TRUE
10,NAT_NON_VEG,text,"notNull(nat_non);notEmpty(nat_non);matchList(nat_non,{'NMB','NWF','NWL','MB','MC','MS','WF','WL','WR'})","mapText(nat_non, {'NMB','NWF','NWL','MB','MC','MS','WF','WL','WR'}, {'EX','FL','LA','EX','RK','WS','FL','LA','RI'})",Maps source value to NAT_NON_VEG using list of values,TRUE
11,NON_FOR_ANTH,text,"countNotNull({anth_veg, anth_non}, 1, 'TRUE', 'TRUE');matchList(anth_veg, {'AIG','AIH','CIP','CIW','IW','PR','IP','P','A','IG','IH','II','SR'}, 'FALSE', 'TRUE');matchList(anth_non, {'AIG','AIH','CIP','CIW','IW','PR','IP','P','A','IG','IH','II','SR'}, 'FALSE', 'TRUE')","avi01_non_for_anth_translation(anth_veg, anth_non, {'AIG','AIH','CIP','CIW','IW','PR','IP','P','A','IG','IH','II','SR'}, {'IN','FA','FA','FA','CL','FA','FA','CL','CL','IN','FA','IN','SE'}, 'FALSE')","Custom CASFRI map function merges anth_veg and anth_non then runs mapText. Validation functions check exactly one input has a value, and that the value is in the match list.",TRUE
12,NON_FOR_VEG,text,"notNull(nfl);notEmpty(nfl);matchList(nfl,{'HF','HG','SC','SO','BR'})","mapText(nfl, {'HF','HG','SC','SO','BR'}, {'HF','HG','SC','SO','BR'})",Maps source value to NON_FOR_VEG using list of values. FLAG-map list matches fri list. Is this correct?,TRUE
