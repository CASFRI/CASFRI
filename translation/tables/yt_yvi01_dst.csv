rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(poly_no);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, '', poly_no, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,DIST_TYPE_1,text,"notEmpty(dist_code1);matchList(dist_code1,{'DB','DD','DF','DI','DL','DS','DW'})","mapText(dist_code1, {'DB','DD','DF','DI','DL','DS','DW'}, {'BU','DI','FL','IK','CO','SL','WF'})",Maps source value to DIST_TYPE_1 using lists of values,TRUE
3,DIST_YEAR_1,integer,"notNull(dist_year1);isInt(dist_year1);isBetween(dist_year1, 1, 2020)",copyInt(dist_year1),Copies source attribute to DIST_YEAR_1,TRUE
4,DIST_EXT_UPPER_1,integer,false(),nothingInt(),Attribute does not occur,TRUE
5,DIST_EXT_LOWER_1,integer,false(),nothingInt(),Attribute does not occur,TRUE
6,DIST_TYPE_2,text,"notEmpty(dist_code2);matchList(dist_code2,{'DB','DD','DF','DI','DL','DS','DW'})","mapText(dist_code2, {'DB','DD','DF','DI','DL','DS','DW'}, {'BU','DI','FL','IK','CO','SL','WF'})",Maps source value to DIST_TYPE_2 using lists of values,TRUE
7,DIST_YEAR_2,integer,"notNull(dist_year2);isInt(dist_year2);isBetween(dist_year2, 1, 2020)",copyInt(dist_year2),Copies source attribute to DIST_YEAR_2,TRUE
8,DIST_EXT_UPPER_2,integer,false(),nothingInt(),Attribute does not occur,TRUE
9,DIST_EXT_LOWER_2,integer,false(),nothingInt(),Attribute does not occur,TRUE
10,DIST_TYPE_3,text,false(),nothingText(),Attribute does not occur,TRUE
11,DIST_YEAR_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
12,DIST_EXT_UPPER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
13,DIST_EXT_LOWER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
14,LAYER,integer,true(),copyInt(1),Assign disturbances to layer 1 unless inventory specifies otherwise. This allows all disturbance to be queried with layer 1 info.,TRUE
