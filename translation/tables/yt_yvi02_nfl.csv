rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(water, anthropogenic, exposed_land, snow_ice, shrub_type, non_shrub_type {'Lake','River','Airport','Anthropogenic Other','Cultivated','Generic Clearing','Gravel Pit','Industrial Corridor','Industrial Site','Mine Site','Mine Tailings','Railway','Road','Rural Residential','Seismic','Tower Site','Urban/Settlement','Beach','Bedrock','Cut Bank','Exposed Soil','Pond/Lake Sediment','River Sediment','Rubble','Sand','Talus','Snow/Ice','Low Shrub','Tall Shrub','Bryod','Forb','Graminoid','Herb','Lichen','Moss'})",NA,Translate only rows where type_lnd is not empty. Note that none of these rows have species info., TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"yvi02_nfl_soil_moisture_validation(water, anthropogenic, exposed_land, snow_ice, shrub_type, non_shrub_type);notNull(soil_moist_reg);notEmpty(soil_moist_reg);matchList(soil_moist_reg,{'Dry','Fresh','Moderately Dry','Moderately Fresh','Moderately Moist','Moderately Wet','Moist','Very Fresh','Very Moist','Very Wet','Wet'})","mapText(soil_moist_reg, {'Dry','Fresh','Moderately Dry','Moderately Fresh','Moderately Moist','Moderately Wet','Moist','Very Fresh','Very Moist','Very Wet','Wet'}, {'DRY','MESIC','DRY','MESIC','MOIST','WET','MOIST','MESIC','MOIST','WET','WET'})",Validation: only want to translate soil moisture in NFL table if the row is either non_for_veg or nat_non_veg = EX (burned or exposed land).,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,LAYER,integer,true(),copyInt(1),Only one layer,TRUE
5,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
10,NAT_NON_VEG,text,"notNull(water, exposed_land, snow_ice);notEmpty(water, exposed_land, snow_ice);matchList(water, {'Lake','River'}|NULL_VALUE);matchList(exposed_land, {'Beach','Bedrock','Cut Bank','Exposed Soil','Pond/Lake Sediment','River Sediment','Rubble','Sand','Talus'}),matchList(snow_ice, {'Snow/Ice'}|NULL_VALUE)","mapText(water, exposed_land, snow_ice, {'Lake','River','Beach','Bedrock','Cut Bank','Exposed Soil','Pond/Lake Sediment','River Sediment','Rubble','Sand','Talus','Snow/Ice'}, {'LAKE','RIVER','BEACH','ROCK_RUBBLE','SLIDE','EXPOSED_LAND','WATER_SEDIMENT','WATER_SEDIMENT','ROCK_RUBBLE','SAND','ROCK_RUBBLE','SNOW_ICE'}))","Checks type_lnd is not empty and is in 'NW','NS','NE'. Then checks either landpos is 'A', or class is in 'R','L','RS','E','S','B','RR'. Translation converts landpos A to ALPINE, and 'R','L','RS','E','S','B','RR' to 'RIVER','LAKE','WATER_SEDIMENT','EXPOSED_LAND','SAND','EXPOSED_LAND','ROCK_RUBBLE'.",TRUE
11,NON_FOR_ANTH,text,"notNull(anthropogenic);notEmpty(anthropogenic);matchList(anthropogenic {'Airport','Anthropogenic Other','Cultivated','Generic Clearing','Gravel Pit','Industrial Corridor','Industrial Site','Mine Site','Mine Tailings','Railway','Road','Rural Residential','Seismic','Tower Site', 'Urban/Settlement'})","mapText(anthropogenic, {'Airport','Anthropogenic Other','Cultivated','Generic Clearing','Gravel Pit','Industrial Corridor','Industrial Site','Mine Site','Mine Tailings','Railway','Road','Rural Residential','Seismic','Tower Site', 'Urban/Settlement'}, {'FACILITY_INFRASTRUCTURE','OTHER','CULTIVATED','OTHER','INDUSTRIAL','INDUSTRIAL','INDUSTRIAL','INDUSTRIAL','INDUSTRIAL','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','SETTLEMENT','INDUSTRIAL','FACILITY_INFRASTRUCTURE', 'SETTLEMENT'})","Checks type_lnd is not empty. Checks type_lnd is NU, and class is RD, G or T. Converts RD, G and T to OTHER.",TRUE
12,NON_FOR_VEG,text,"notNull(shrub_type, non_shrub_type);notEmpty(shrub_type, non_shrub_type);matchList(shrub_type, {'Low Shrub','Tall Shrub'}|NULL_VALUE);matchList(non_shrub_type, {'Bryod','Forb','Graminoid','Herb','Lichen','Moss'})","mapText(shrub_type, non_shrub_type, {'Low Shrub','Tall Shrub','Bryod','Forb','Graminoid','Herb','Lichen','Moss'}, {'LOW_SHRUB','TALL_SHRUB','BRYOD','FORBS','GRAMINOIDS','HERBS','BRYOD','BRYOD'})","Checks type_lnd is not empty. Checks type_lnd is VN, and class is S, H, C or M. Converts cl_mod of TS, TSo, TSc, LS to TALL_SHRUB, TALL_SHRUB, TALL_SHRUB, LOW_SHRUB. And classes of C, H and M to BRYOID, HERBS and HERBS.",TRUE
