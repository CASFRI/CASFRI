rule_id,targetAttribute,targetAttributeType,validationRules,translationRules,description,descUpToDateWithRules
1,CAS_ID,text,notNull(src_filename|NULL_VALUE);notNull(map_id|NULL_VALUE);notNull(feature_id|-8888);notNull(ogc_fid|-8888),"padConcat('bc08', src_filename, map_id, feature_id, ogc_fid, 4,15,10,10,7, 'x','x','x',0,0, '-', TRUE, TRUE)",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moisture_regime_1|NULL_VALUE);matchList(soil_moisture_regime_1,'0,1,2,3,4,5,6,7,8'|-9998)","mapText(soil_moisture_regime_1, '0,1,2,3,4,5,6,7,8', 'D,D,D,F,F,M,M,W,W')",Maps source value to SOIL_MOIST_REG using lists of values,TRUE
3,STRUCTURE_PER,integer,false(|-8887),nothing(),Copy source value to STRUCTURE_PER,TRUE
4,LAYER,integer,true(|1),copyInt(1),Copy value of 1 to LAYER,TRUE
5,LAYER_RANK,integer,true(|1),copyInt(1),Copy value of 1 to LAYER_RANK,TRUE
6,CROWN_CLOSURE_UPPER,integer,"notNull(crown_closure|-8888);isInt(crown_closure|-8889);between(crown_closure,0,100|-9999)",copyInt(crown_closure),Maps source value to CROWN_CLOSURE_UPPER using lists of values,TRUE
7,CROWN_CLOSURE_LOWER,integer,"notNull(crown_closure|-8888);isInt(crown_closure|-8889);between(crown_closure,0,100|-9999)",copyInt(crown_closure),Maps source value to CROWN_CLOSURE_LOWER using lists of values,TRUE
8,HEIGHT_UPPER,double precision,"notNull(proj_height_1|-8888);isNumeric(proj_height_1|-8889);greaterThan(proj_height_1,0.1|-9999);lessThan(proj_height_1,100|-9999)",copy(proj_height_1),Copies source value to HEIGHT_UPPER,TRUE
9,HEIGHT_LOWER,double precision,"notNull(proj_height_1|-8888);isNumeric(proj_height_1|-8889);greaterThan(proj_height_1,0.1|-9999);lessThan(proj_height_1,100|-9999)",copy(proj_height_1),Copies source value to HEIGHT_LOWER,TRUE
10,NAT_NON_VEG,text,"notNull(non_veg_cover_type_1|NULL_VALUE);notEmpty(non_veg_cover_type_1|EMPTY_STRING);matchTable(non_veg_cover_type_1,translation,bc_vri01_nfl|NOT_IN_SET)","lookupText(non_veg_cover_type_1, translation, bc_vri01_nfl, nfl, TRUE)",Maps source value to NAT_NON_VEG using lookup table,TRUE
11,NON_FOR_ANTH,text,"notNull(non_veg_cover_type_1|NULL_VALUE);notEmpty(non_veg_cover_type_1|EMPTY_STRING);matchTable(non_veg_cover_type_1,translation,bc_vri01_nfl|NOT_IN_SET)","lookupText(non_veg_cover_type_1, translation, bc_vri01_nfl, nfl, TRUE)","Need function that take 2 attributes (anthro_veg, anth_noveg)",TRUE
12,NON_FOR_VEG,text,"notNull(land_cover_class_cd_1|NULL_VALUE);notEmpty(land_cover_class_cd_1|EMPTY_STRING);matchTable(land_cover_class_cd_1,translation,bc_vri01_nfl|NOT_IN_SET)","lookupText(land_cover_class_cd_1, translation, bc_vri01_nfl, nfl, TRUE)",Maps source value to NON_FOR_VEG using lookup table,TRUE
