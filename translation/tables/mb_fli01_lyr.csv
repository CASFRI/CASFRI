rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"notEmpty({species_1, species_2, species_3, species_4, species_5, species_6}, TRUE)",NA,Translate only rows with species info,TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Create cas_id using the unique identifier poly_id added during loading.,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);notEmpty(soil_moist_reg);matchList(soil_moist_reg,{'D','F','V','M','W'})","mapText(soil_moist_reg, {'D','F','V','M','W'}, {'DRY','MESIC','MESIC','MOIST','WET'})",Maps source value to SOIL_MOIST_REG using lists of values,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,STRUCTURE_RANGE,double precision,"matchList(structure_range, 'C'|-8887)","multiply(structure_range, 2)",Provided in height range column as the number of metres from the midpoint that describes the height of the complex stand (e.g. 12 m +- 5 m). We therefore need to multiply by 2.,TRUE
5,LAYER,integer,true(),"lyr_layer_translation({height_layer1, height_layer2, height_layer3, height_layer4, height_layer5}, {species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1, species_6_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2, species_6_layer2}, {species_1_layer3, species_2_layer3, species_3_layer3, species_4_layer3, species_5_layer3, species_6_layer3}, {species_1_layer4, species_2_layer4, species_3_layer4, species_4_layer4, species_5_layer4, species_6_layer4}, {species_1_layer5, species_2_layer5, species_3_layer5, species_4_layer5, species_5_layer5, species_6_layer5}, layer)",Reorder the layers that exist in the polygon by height and return the index of the layer being processed,TRUE
6,LAYER_RANK,integer,notNull(layer_rank);isInt(layer_rank),copyInt(layer_rank),"1 to 4 based on order of precedence (see manual section 5.2 for details). Overstorey layers (S, M or C) are ranked first (in the case of M, the taller layer is given first ranking); then the Understorey layer (U) and finally, the Veteran layer (V) (lowest priority of the treed layers).  If one of the layers (default or M) is non-treed (e.g., shrub), then that layer is given lowest priority.",TRUE
7,CROWN_CLOSURE_UPPER,integer,"notNull(crown_closure_upper);notEmpty(crown_closure_upper|-8888);isInt(crown_closure_upper);isBetween(crown_closure_upper, 0, 9|-9997)","mapInt(crown_closure_upper, {0,1,2,3,4,5,6,7,8,9}, {10,20,30,40,50,60,70,80,90,100})",Maps source value to CROWN_CLOSURE_UPPER using lists of values.,TRUE
8,CROWN_CLOSURE_LOWER,integer,"notNull(crown_closure_lower);notEmpty(crown_closure_lower|-8888);isInt(crown_closure_lower);isBetween(crown_closure_lower, 0, 9|-9997)","mapInt(crown_closure_upper, {0,1,2,3,4,5,6,7,8,9}, {1,11,21,31,41,51,61,71,81,91})",Maps source value to CROWN_CLOSURE_UPPER using lists of values.,TRUE
9,HEIGHT_UPPER,double precision,"notNull(height_upper);isNumeric(height_upper);isGreaterThan(height_upper, 0, FALSE|-9999);isBetween(height_upper,0,100)",copyDouble(height_upper),Copies source value to HEIGHT_UPPER,TRUE
10,HEIGHT_LOWER,double precision,"notNull(height_lower);isNumeric(height_lower);isGreaterThan(height_lower, 0, FALSE|-9999);isBetween(height_lower,0,100)",copyDouble(height_lower),Copies source value to HEIGHT_LOWER,TRUE
11,PRODUCTIVITY,text,false(),nothingText(),Attribute does not occur,TRUE
12,PRODUCTIVITY_TYPE,text,false(),nothingText(),Attribute does not occur,TRUE
13,SPECIES_1,text,"notNull(species_1);notEmpty(species_1|NULL_VALUE);matchTable(species_1, 'translation', 'species_code_mapping', 'mb_species_codes', TRUE)","lookupText(species_1, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', TRUE)",Maps source value to SPECIES_1 using lookup table,TRUE
14,SPECIES_PER_1,integer,"notNull(species_per_1);isInt(species_per_1|-9997);isGreaterThan(species_per_1, 1|-9999);isBetween(species_per_1, 1, 10)","multiplyInt(species_per_1, 10)",Maps source value to SPECIES_PER_1 by multiplying by 10,TRUE
15,SPECIES_2,text,"notNull(species_2);notEmpty(species_2|NULL_VALUE);matchTable(species_2, 'translation', 'species_code_mapping', 'mb_species_codes', TRUE)","lookupText(species_2, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', TRUE)",Maps source value to SPECIES_2 using lookup table,TRUE
16,SPECIES_PER_2,integer,"notNull(species_per_2);isInt(species_per_2|-9997);isGreaterThan(species_per_2, 1|-9999);isBetween(species_per_2, 1, 10)","multiplyInt(species_per_2, 10)",Maps source value to SPECIES_PER_2 by multiplying by 10,TRUE
17,SPECIES_3,text,"notNull(species_3);notEmpty(species_3|NULL_VALUE);matchTable(species_3, 'translation', 'species_code_mapping', 'mb_species_codes', TRUE)","lookupText(species_3, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', TRUE)",Maps source value to SPECIES_3 using lookup table,TRUE
18,SPECIES_PER_3,integer,"notNull(species_per_3);isInt(species_per_3|-9997);isGreaterThan(species_per_3, 1|-9999);isBetween(species_per_3, 1, 10)","multiplyInt(species_per_3, 10)",Maps source value to SPECIES_PER_3 by multiplying by 10. ,TRUE
19,SPECIES_4,text,"notNull(species_4);notEmpty(species_4|NULL_VALUE);matchTable(species_4, 'translation', 'species_code_mapping', 'mb_species_codes', TRUE)","lookupText(species_4, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', TRUE)",Maps source value to SPECIES_4 using lookup table,TRUE
20,SPECIES_PER_4,integer,"notNull(species_per_4);isInt(species_per_4|-9997);isGreaterThan(species_per_4, 1|-9999);isBetween(species_per_4, 1, 10)","multiplyInt(species_per_4, 10)",Maps source value to SPECIES_PER_4 by multiplying by 10. ,TRUE
21,SPECIES_5,text,"notNull(species_5);notEmpty(species_5|NULL_VALUE);matchTable(species_5, 'translation', 'species_code_mapping', 'mb_species_codes', TRUE)","lookupText(species_5, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', TRUE)",Maps source value to SPECIES_5 using lookup table,TRUE
22,SPECIES_PER_5,integer,"notNull(species_per_5);isInt(species_per_5|-9997);isGreaterThan(species_per_5, 1|-9999);isBetween(species_per_5, 1, 10)","multiplyInt(species_per_5, 10)",Maps source value to SPECIES_PER_5 by multiplying by 10. ,TRUE
23,SPECIES_6,text,"notNull(species_6);notEmpty(species_6|NULL_VALUE);matchTable(species_6, 'translation', 'species_code_mapping', 'mb_species_codes', TRUE)","lookupText(species_6, 'translation', 'species_code_mapping', 'mb_species_codes', 'casfri_species_codes', TRUE)",Maps source value to SPECIES_6 using lookup table,TRUE
24,SPECIES_PER_6,integer,"notNull(species_per_6);isInt(species_per_6|-9997);isGreaterThan(species_per_6, 1|-9999);isBetween(species_per_6, 1, 10)","multiplyInt(species_per_6, 10)",Maps source value to SPECIES_PER_6 by multiplying by 10. ,TRUE
25,SPECIES_7,text,false(),nothingText(),Attribute does not occur,TRUE
26,SPECIES_PER_7,integer,false(),nothingInt(),Attribute does not occur,TRUE
27,SPECIES_8,text,false(),nothingText(),Attribute does not occur,TRUE
28,SPECIES_PER_8,integer,false(),nothingInt(),Attribute does not occur,TRUE
29,SPECIES_9,text,false(),nothingText(),Attribute does not occur,TRUE
30,SPECIES_PER_9,integer,false(),nothingInt(),Attribute does not occur,TRUE
31,SPECIES_10,text,false(),nothingText(),Attribute does not occur,TRUE
32,SPECIES_PER_10,integer,false(),nothingInt(),Attribute does not occur,TRUE
33,ORIGIN_UPPER,integer,"notNull(origin_upper);isInt(origin_upper);isBetween(origin_upper,1000,2020)",copyInt(origin_upper),Copies source value to ORIGIN_UPPER,TRUE
34,ORIGIN_LOWER,integer,"notNull(origin_lower);isInt(origin_lower);isBetween(origin_lower,1000,2020)",copyInt(origin_lower),Copies source value to ORIGIN_LOWER,TRUE
35,SITE_CLASS,text,false(),nothingText(),Attribute does not occur,TRUE
36,SITE_INDEX,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
