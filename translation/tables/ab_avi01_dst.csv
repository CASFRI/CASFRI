rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(trm_1);notNull(poly_num);notNull(ogc_fid),"padConcat({inventory_id, src_filename, trm_1, poly_num, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,DIST_TYPE_1,text,"notNull(mod1);notEmpty(mod1);matchList(mod1,{'BU','CC','CL','CU','DT','PL','SC','SL','SN','ST','SU','TH','UK','WF', 'SI'})","mapText(mod1, {'BU','CC','CL','CU','DT','PL','SC','SL','SN','ST','SU','TH','UK','WF', 'SI'}, {'BU','CO','OT','CL','DT','SI','SI','OT','DT','OT','OT','SI','OT','WF', 'SI'})",Maps source value to DIST_TYPE_1 using lists of values. Note that understory disturbance is possible but AB06 and AB16 have no entries.,TRUE
3,DIST_YEAR_1,integer,"notNull(mod1_yr);isInt(mod1_yr);isBetween(mod1_yr,1,2020)",copyInt(mod1_yr),Copies mod1_yr to DIST_YEAR_1. Values are often zero in ab06.,TRUE
4,DIST_EXT_UPPER_1,integer,"notNull(mod1_ext);isInt(mod1_ext);isGreaterThan(mod1_ext,0,'FALSE');matchList(mod1_ext,{1,2,3,4,5})","mapInt(mod1_ext, {1,2,3,4,5}, {25,50,75,95,100})",Maps source attribute to upper extent,TRUE
5,DIST_EXT_LOWER_1,integer,"notNull(mod1_ext);isInt(mod1_ext);isGreaterThan(mod1_ext,0,'FALSE');matchList(mod1_ext,{1,2,3,4,5})","mapInt(mod1_ext, {1,2,3,4,5}, {1,26,51,76,96})",Maps source attribute to lower extent,TRUE
6,DIST_TYPE_2,text,"notNull(mod2);notEmpty(mod2);matchList(mod2,{'BU','CC','CL','CU','DT','PL','SC','SL','SN','ST','SU','TH','UK','WF', 'SI'})","mapText(mod2, {'BU','CC','CL','CU','DT','PL','SC','SL','SN','ST','SU','TH','UK','WF', 'SI'}, {'BU','CO','OT','CL','DT','SI','SI','OT','DT','OT','OT','SI','OT','WF', 'SI'})",Maps source value to DIST_TYPE_2 using lists of values,TRUE
7,DIST_YEAR_2,integer,"notNull(mod2_yr);isInt(mod2_yr);isBetween(mod2_yr,1,2020)",copyInt(mod2_yr),Copies mod1_yr to DIST_YEAR_2. Values are often zero in ab06.,TRUE
8,DIST_EXT_UPPER_2,integer,"notNull(mod2_ext);isInt(mod2_ext);isGreaterThan(mod2_ext,0,'FALSE');matchList(mod2_ext,{1,2,3,4,5})","mapInt(mod2_ext, {1,2,3,4,5}, {25,50,75,95,100})",Maps source attribute to upper extent,TRUE
9,DIST_EXT_LOWER_2,integer,"notNull(mod2_ext);isInt(mod2_ext);isGreaterThan(mod2_ext,0,'FALSE');matchList(mod2_ext,{1,2,3,4,5})","mapInt(mod2_ext, {1,2,3,4,5}, {1,26,51,76,96})",Maps source attribute to lower extent,TRUE
10,DIST_TYPE_3,text,false(),nothingText(),Attribute does not occur,TRUE
11,DIST_YEAR_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
12,DIST_EXT_UPPER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
13,DIST_EXT_LOWER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
14,LAYER,integer,true(),copyInt(1),Assign disturbances to layer 1 unless inventory specifies otherwise. This allows all disturbance to be queried with layer 1 info.,TRUE
