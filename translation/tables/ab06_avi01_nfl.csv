rule_id,targetAttribute,targetAttributeType,validationRules,translationRules,description,descUpToDateWithRules
1,CAS_ID,text,notNull(src_filename|NULL_VALUE);notNull(trm_1|NULL_VALUE);notNull(poly_num|NULL_VALUE);notNull(ogc_fid|NULL_VALUE),"padConcat({'ab06', src_filename, trm_1, poly_num, ogc_fid}, {'4','15','10','10','7'}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(moist_reg|NULL_VALUE);matchList(moist_reg,{'a','A','d','D','m','M','w','W'}|NOT_IN_SET)","mapText(moist_reg, {'a','A','d','D','m','M','w','W'}, {'A','A','D','D','F','F','W','W'})",Maps source value to SOIL_MOIST_REG using lists of values,TRUE
3,STRUCTURE_PER,integer,"notNull(struc_val|-8888);isInt(struc_val|-9995);between(struc_val,'1','9'|-9999)",copyInt(struc_val),Copy source value to STRUCTURE_PER,TRUE
4,LAYER,integer,true(|-8887),copyInt('1'),Copy value of 1 to LAYER,TRUE
5,LAYER_RANK,integer,true(|-8887),copyInt('1'),Copy value of 1 to LAYER_RANK,TRUE
6,CROWN_CLOSURE_UPPER,integer,"notNull(density|-8888);matchList(density,{'A','B','C','D'}|-9998)","mapInt(density, {'A','B','C','D'}, {'30','50','70','100'})",Maps source value to CROWN_CLOSURE_UPPER using lists of values,TRUE
7,CROWN_CLOSURE_LOWER,integer,"notNull(density|-8888);matchList(density,{'A','B','C','D'}|-9998)","mapInt(density, {'A','B','C','D'}, {'6','31','51','71'})",Maps source value to CROWN_CLOSURE_LOWER using lists of values,TRUE
8,HEIGHT_UPPER,double precision,"notNull(height|-8888);isNumeric(height|-9995);greaterThan(height,'1'|-9999);lessThan(height,'100'|-9999)",copyDouble(height),Copies source value to HEIGHT_UPPER,TRUE
9,HEIGHT_LOWER,double precision,"notNull(height|-8888);isNumeric(height|-9995);greaterThan(height,'1'|-9999);lessThan(height,'100'|-9999)",copyDouble(height),Copies source value to HEIGHT_LOWER,TRUE
10,NAT_NON_VEG,text,"notNull(nat_non|NULL_VALUE);notEmpty(nat_non|EMPTY_STRING);matchList(nat_non,{'NMB','NWF','NWL'}|NOT_IN_SET)","mapText(nat_non, {'NMB','NWF','NWL'}, {'EX','FL','LA'})",Maps source value to NAT_NON_VEG using list of values,TRUE
11,NON_FOR_ANTH,text,"avi01_non_for_anth_validation(anth_veg, anth_non, {'AIG','AIH','CIP','CIW'}, 'TRUE'|INVALID)","avi01_non_for_anth_translation(anth_veg, anth_non, {'AIG','AIH','CIP','CIW'}, {'IN','FA','FA','FA'}, 'TRUE')","Custom CASFRI map function merges anth_veg and anth_non then runs mapText(anth_veg_anth_non,  'AIG,AIH,CIP,CIW', 'IN,FA,FA,FA'). Validation function merges columns, checks only one of them has a value.",TRUE
12,NON_FOR_VEG,text,"notNull(nfl|NULL_VALUE);notEmpty(nfl|EMPTY_STRING);matchList(nfl,{'HF','HG','SC','SO'}|NOT_IN_SET)","mapText(nfl, {'HF','HG','SC','SO'}, {'HF','HG','SC','SO'})",Maps source value to NON_FOR_VEG using list of values. FLAG-map list matches fri list. Is this correct?,TRUE
