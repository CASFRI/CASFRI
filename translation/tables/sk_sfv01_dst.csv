rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(poly_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, '', poly_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,DIST_TYPE_1,text,"notNull(disturbance_1);notEmpty(disturbance_1);matchList(disturbance_1,{'CO','BO','WI','HA','IN','DI','AK', 'SL', 'SI'})","mapText(disturbance_1, {'CO','BO','WI','HA','IN','DI','AK', 'SL', 'SI'}, {'CO','BU','WF','WE','IK','DI','OT','SL','SI'})","Maps source value to DIST_TYPE_1 using lists of values. Note that source values SN, S, W, C, and B appear in SK02 but are not in sfvi specs. These will return NOT_IN_SET.",TRUE
3,DIST_YEAR_1,integer,"notNull(yod_1);isInt(yod_1);isBetween(yod_1, 1, 2020)",copyInt(yod_1),Copies source attribute to DIST_YEAR_1,TRUE
4,DIST_EXT_UPPER_1,integer,"notNull(disturbance_extent_1);isInt(disturbance_extent_1);isGreaterThan(disturbance_extent_1,0,'FALSE');matchList(disturbance_extent_1,{1,2,3,4,5})","mapInt(disturbance_extent_1, {1,2,3,4,5}, {25,50,75,95,100})",Maps extent range to upper,TRUE
5,DIST_EXT_LOWER_1,integer,"notNull(disturbance_extent_1);isInt(disturbance_extent_1);isGreaterThan(disturbance_extent_1,0,'FALSE');matchList(disturbance_extent_1,{1,2,3,4,5})","mapInt(disturbance_extent_1, {1,2,3,4,5}, {1,26,51,76,96})",Maps extent range to lower,TRUE
6,DIST_TYPE_2,text,"notNull(disturbance_2);notEmpty(disturbance_2);matchList(disturbance_2,{'CO','BO','WI','HA','IN','DI','AK', 'SL', 'SI'})","mapText(disturbance_1, {'CO','BO','WI','HA','IN','DI','AK', 'SL', 'SI'}, {'CO','BU','WF','WE','IK','DI','OT','SL','SI'})",Maps source value to DIST_TYPE_1 using lists of values,TRUE
7,DIST_YEAR_2,integer,"notNull(yod_2);isInt(yod_2);isBetween(yod_2, 1, 2020)",copyInt(yod_2),Copies source attribute to DIST_YEAR_1,TRUE
8,DIST_EXT_UPPER_2,integer,"notNull(disturbance_extent_2);isInt(disturbance_extent_2);isGreaterThan(disturbance_extent_2,0,'FALSE');matchList(disturbance_extent_2,{1,2,3,4,5})","mapInt(disturbance_extent_2, {1,2,3,4,5}, {25,50,75,95,100})",Maps extent range to upper,TRUE
9,DIST_EXT_LOWER_2,integer,"notNull(disturbance_extent_2);isInt(disturbance_extent_2);isGreaterThan(disturbance_extent_2,0,'FALSE');matchList(disturbance_extent_2,{1,2,3,4,5})","mapInt(disturbance_extent_2, {1,2,3,4,5}, {1,26,51,76,96})",Maps extent range to lower,TRUE
10,DIST_TYPE_3,text,"notNull(disturbance_3);notEmpty(disturbance_3);matchList(disturbance_3,{'CO','BO','WI','HA','IN','DI','AK', 'SL', 'SI'})","mapText(disturbance_1, {'CO','BO','WI','HA','IN','DI','AK', 'SL', 'SI'}, {'CO','BU','WF','WE','IK','DI','OT','SL','SI'})",Maps source value to DIST_TYPE_1 using lists of values,TRUE
11,DIST_YEAR_3,integer,"notNull(yod_3);isInt(yod_3);isBetween(yod_3, 1, 2020)",copyInt(yod_3),Copies source attribute to DIST_YEAR_1,TRUE
12,DIST_EXT_UPPER_3,integer,"notNull(disturbance_extent_3);isInt(disturbance_extent_3);isGreaterThan(disturbance_extent_3,0,'FALSE');matchList(disturbance_extent_3,{1,2,3,4,5})","mapInt(disturbance_extent_3, {1,2,3,4,5}, {25,50,75,95,100})",Maps extent range to upper,TRUE
13,DIST_EXT_LOWER_3,integer,"notNull(disturbance_extent_3);isInt(disturbance_extent_3);isGreaterThan(disturbance_extent_3,0,'FALSE');matchList(disturbance_extent_3,{1,2,3,4,5})","mapInt(disturbance_extent_3, {1,2,3,4,5}, {1,26,51,76,96})",Maps extent range to lower,TRUE
14,LAYER,integer,true(),nothingInt(|-8886),Disturbance layer is unknown,TRUE
