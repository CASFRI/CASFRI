rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(np,{3300, 3500, 3600, 3700, 3800, 3900, 4000, 5100, 3400, 5210, 5220, 5200, 9000})",NA,Translate only rows where np is equal to NFL codes., TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(orig_stand_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, '', orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);notEmpty(soil_moist_reg);matchList(soil_moist_reg,{'VR','VRR','R','RW','W','WMW','MW','MWI','I','IP','P','PVP','VP'})","mapText(soil_moist_reg, {'VR','VRR','R','RW','W','WMW','MW','MWI','I','IP','P','PVP','VP'}, {'DRY','DRY','DRY','MESIC','MESIC','MESIC','MESIC','MOIST','MOIST','MOIST','MOIST','WET','WET'})",Maps soure value to SOIL_MOIST_REG,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,LAYER,integer,true(),"countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1}, {species_1_layer2, species_2_layer2}, {np}, layer, 'TRUE')","Count layers up to max_layer_number which is set by the createMappingsView() function in the workflow. Layers are the canopy species, understory species, and non-forest types. Custom function checks for valid nfl value when counting nfl layer. Validation returns UNKNOWN if num_of_layers is zero.",TRUE
5,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),Attribute does not occur,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),Attribute does not occur,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
10,NAT_NON_VEG,text,"notNull(np);notEmpty(np);notMatchList(np, {0}|NULL_VALUE);matchList(np,{3800,5100,3400,5210,5220,5200})","mapText(np, {3800,5100,3400,5210,5220,5200}, {'SAND','FLOOD','ROCK_RUBBLE','LAKE','FLOOD','RIVER'})",Maps source value to NAT_NON_VEG using list of values. Zero is caught and set to NULL_VALUE.,TRUE
11,NON_FOR_ANTH,text,"notNull(np);notEmpty(np);notMatchList(np, {0}|NULL_VALUE);matchList(np,{3700,9000,4000})","mapText(np, {3700,9000,4000}, {'OTHER','OTHER','CULTIVATED'})",Maps source value to NON_FOR_ANTH using list of values. Zero is caught and set to NULL_VALUE.,TRUE
12,NON_FOR_VEG,text,"notNull(np);notEmpty(np);notMatchList(np, {0}|NULL_VALUE);matchList(np,{3300,3500,3600,3900})","mapText(np, {3300,3500,3600,3900}, {'OPEN_MUSKEG','TALL_SHRUB','GRAMINOIDS','OTHER'})",Maps source value to NON_FOR_VEG using list of values. Zero is caught and set to NULL_VALUE.,TRUE
