rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"notEmpty(species);matchList(row_polytype, {'BSH','TMS'})",NA,"Translate only rows where polytype is FOR. Note that none of these rows have nfl info so each polygon is either LYR or NFL. Also include the productivity rows that are not forested. Note that row productivity values are mapped to null for layer 2, this is to avoid double counting in the case that only productivity values are available. So layer 2 will only be included if layer 2 species info is available.", TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(orig_stand_id_1);notNull(orig_stand_id_2);notNull(ogc_fid),"padConcat({inventory_id, src_filename, orig_stand_id_1, orig_stand_id_2, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)","Concatenates five attributes to create CAS_ID. Note that polyid in ON02 can have up to 19 characters. To trace back to the source polyon, we split this into two strings during loading, polyid_1_10, and polyid_11_20. Concatenating these and dropping any x characters will return the original polyid identifier.",TRUE
2,SOIL_MOIST_REG,text,false(),nothingText(),Attribute does not occur,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,STRUCTURE_RANGE,double precision,false(),nothingDouble(),No complex structure,TRUE
5,LAYER,integer,true(),"on_lyr_layer_translation({height_layer1, height_layer2}, {species_layer1}, {species_layer2}, row_polytype, layer)","Reorder the layers that exist in the polygon by height and return the index of the layer being processed. If any ALDER or TREED_MUSKEG rows are present, count them in layer 1.",TRUE
6,LAYER_RANK,integer,true(),copyInt(layer_rank),"Layer rank is assigned as 1 for overstory layer (e.g. ospcomp), and 2 for understory layer (e.g. uspcomp).",TRUE
7,CROWN_CLOSURE_UPPER,integer,"matchList(inventory_id, 'ON02'|-8887);notNull(crown_closure_upper);isInt(crown_closure_upper);isBetween(crown_closure_upper,0,100);notMatchList(crown_closure_upper, 0|-8888)",copyInt(crown_closure_upper),"Copies source value to CROWN_CLOSURE_UPPER. No crown closure in ON01, only stocking.",TRUE
8,CROWN_CLOSURE_LOWER,integer,"matchList(inventory_id, 'ON02'|-8887);notNull(crown_closure_lower);isInt(crown_closure_lower);isBetween(crown_closure_lower,0,100);notMatchList(crown_closure_lower, 0|-8888)",copyInt(crown_closure_lower),"Copies source value to CROWN_CLOSURE_LOWER. No crown closure in ON01, only stocking.",TRUE
9,HEIGHT_UPPER,double precision,"notNull(height_upper);isNumeric(height_upper);notMatchList(height_upper, 0|-8888);isBetween(height_upper,0,100,FALSE,TRUE)",copyDouble(height_upper),Copies source value to HEIGHT_UPPER. Checks height value is not null or zero. Zero is considered a null value. Checks value is greater than zero and less than or equal to 100.,TRUE
10,HEIGHT_LOWER,double precision,"notNull(height_lower);isNumeric(height_lower);notMatchList(height_lower, 0|-8888);isBetween(height_lower,0,100,FALSE,TRUE)",copyDouble(height_lower),Copies source value to HEIGHT_UPPER. Checks height value is not null or zero. Zero is considered a null value. Checks value is greater than zero and less than or equal to 100.,TRUE
11,PRODUCTIVITY,text,"matchListTwice(formod, polytype, {'PF', 'RP', 'MR'}, {'BSH','TMS'}|UNKNOWN_VALUE)","mapTextNotNullIndex(formod, {'PF', 'RP', 'MR'}, {'PRODUCTIVE_FOREST', 'PRODUCTIVE_FOREST', 'PRODUCTIVE_FOREST'}, polytype, {'BSH','TMS'}, {'NON_PRODUCTIVE_FOREST','NON_PRODUCTIVE_FOREST'}, 1)","Returns PRODUCTIVE_FOREST if formod is regular production forest or protection forest, or NON_PRODUCTIVE_FOREST if polytype is brush and alder, treed rock, or treed wetland. Note formod and polytype never occur together in the same row. Added MR and request of client in issue #532",TRUE
12,PRODUCTIVITY_TYPE,text,"matchListTwice(formod, polytype, {'PF', 'RP', 'MR'}, {'BSH','TMS'}|UNKNOWN_VALUE)","mapTextNotNullIndex(formod, {'PF', 'RP', 'MR'}, {'PROTECTION_FOREST', 'HARVESTABLE', 'PROTECTION_FOREST'}, polytype, {'BSH','TMS'}, {'ALDER','TREED_MUSKEG'}, 1)",Maps productive types from formod and poytype attributes. Note formod and polytype never occur together in the same row. Added MR and request of client in issue #532,TRUE
13,SPECIES_1,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species,  'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {1,2,3,4,5,6,7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 1, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 1, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
14,SPECIES_PER_1,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species,  'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {1,2,3,4,5,6,7,8,9,10}|-8887)","fim_species_percent_translation(species, 1)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
15,SPECIES_2,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {2,3,4,5,6,7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 2, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 2, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
16,SPECIES_PER_2,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {2,3,4,5,6,7,8,9,10}|-8887)","fim_species_percent_translation(species, 2)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
17,SPECIES_3,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {3,4,5,6,7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 3, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 3, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
18,SPECIES_PER_3,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {3,4,5,6,7,8,9,10}|-8887)","fim_species_percent_translation(species, 3)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
19,SPECIES_4,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {4,5,6,7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 4, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 4, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
20,SPECIES_PER_4,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {4,5,6,7,8,9,10}|-8887)","fim_species_percent_translation(species, 4)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
21,SPECIES_5,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {5,6,7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 5, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 5, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
22,SPECIES_PER_5,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {5,6,7,8,9,10}|-8887)","fim_species_percent_translation(species, 5)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
23,SPECIES_6,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {6,7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 6, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 6, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
24,SPECIES_PER_6,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {6,7,8,9,10}|-8887)","fim_species_percent_translation(species, 6)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
25,SPECIES_7,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {7,8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 7, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 7, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
26,SPECIES_PER_7,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {7,8,9,10}|-8887)","fim_species_percent_translation(species, 7)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
27,SPECIES_8,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {8,9,10}|NOT_APPLICABLE);fim_species_validation(species, 8, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 8, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
28,SPECIES_PER_8,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {8,9,10}|-8887)","fim_species_percent_translation(species, 8)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
29,SPECIES_9,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {9,10}|NOT_APPLICABLE);fim_species_validation(species, 9, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 9, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
30,SPECIES_PER_9,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {9,10}|-8887)","fim_species_percent_translation(species, 9)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
31,SPECIES_10,text,"notNull(species);notEmpty(species);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|INVALID_VALUE);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {10}|NOT_APPLICABLE);fim_species_validation(species, 10, 'translation', 'species_code_mapping', 'on_species_codes')","fim_species_translation(species, 10, 'translation', 'species_code_mapping', 'on_species_codes', 'casfri_species_codes')","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list. Translation - gets the requested species code and feeds the species name from the code into the mapping function that maps to casfri species using a lookup table.",TRUE
32,SPECIES_PER_10,integer,"notNull(species);notEmpty(species|-8888);alphaNumericMatchTable(species, 'translation', 'on_species_valid_alpha_numeric_codes'|-9997);alphaNumericLookupTextMatchList(species, 'translation', 'on_species_valid_alpha_numeric_codes', 'species_count', {10}|-8887)","fim_species_percent_translation(species, 10)","Validation converts species code to alpha numeric, then looks the alpha numeric up in a lookup table to check the code is valid and the number of species matches the list.  String is trimmed to fix some error source data with leading and trainling spaces.     Translation - gets the requested species code and returns the percentage characters.",TRUE
33,ORIGIN_UPPER,integer,"notNull(origin_upper);isInt(origin_upper);isBetween(origin_upper, 1000, 2020)",copyInt(origin_upper),Copies source value to ORIGIN_UPPER,TRUE
34,ORIGIN_LOWER,integer,"notNull(origin_lower);isInt(origin_lower);isBetween(origin_lower, 1000, 2020)",copyInt(origin_lower),Copies source value to ORIGIN_LOWER,TRUE
35,SITE_CLASS,text,"notNull(site_class);notEmpty(site_class);matchList(site_class,{'0','1','2','3','4'})","mapText(site_class, {'0','1','2','3','4'}, {'GOOD','GOOD','MEDIUM','POOR','UNPRODUCTIVE'})",Maps source value to site class,TRUE
36,SITE_INDEX,double precision,"notNull(site_index);isNumeric(site_index);isBetween(site_index,'0.1',40)",copyDouble(site_index),Copies source value to site index,TRUE
