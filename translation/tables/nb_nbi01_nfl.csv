rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList({slu, water_code},{'BL','RF','RO', 'LK', 'RV', 'ON', 'PN', 'SL', 'WA', '4', '6', '7', '8', '9', '100', '416', 'AI','AR','BA','CB','CG','CH','CL','CO','CS','CT','EA','FD','FP','GC','GP','IP','IZ','LE','LF','MI','PA','PB','PP','PR','QU','RD','RR','RU','RY','SG','SK','TM','TR','UR','WR','AQ','415', 'BO'})",NA,Translate only rows where slu or water_code has an nfl value. Only one of these values present per row., TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, '', orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,false(|UNKNOWN_VALUE),nothingText(),Attribute does not occur,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,LAYER,integer,true(),"nb_countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2}, wc, slu, water_code, layer)","Assigns layer based on the presence of a not null value for attributes representing each layer. Assumes valid LYR1 row must have l1s1 or l1s2 or l1s3 or l1s4 or l1s5, or a wc value of FW indicating a non-productive TREED_MUSKEG layer. LYR2 must have l2s1 or l2s2 or l2s3 or l2s4 or l2s5, NFL must have nfl value from slu or water_code. Only 1 NFL layer possible per polygon.",TRUE
5,LAYER_RANK,integer,false(),nothingInt(),Attribute does not occur,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
10,NAT_NON_VEG,text,"notNull({slu, water_code}, TRUE);matchList({slu, water_code},{'BL','RF','RO', 'LK', 'RV', 'ON', 'PN', 'SL', 'WA', 4, 6, 7, 8, 9, 100, 416}|NOT_APPLICABLE)","mapText({slu, water_code}, {'BL','RF','RO', 'LK', 'RV', 'ON', 'PN', 'SL', 'WA', 4, 6, 7, 8, 9, 100, 416}, {'EXPOSED_LAND','WATER_SEDIMENT','ROCK_RUBBLE', 'LAKE', 'RIVER', 'OCEAN', 'LAKE', 'LAKE', 'OTHER', 'LAKE', 'RIVER', 'RIVER', 'LAKE', 'LAKE', 'OCEAN', 'LAKE'})",Maps source value to NAT_NON_VEG using list of values. Takes two source columns representing Forest and Waterbody nfl codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
11,NON_FOR_ANTH,text,"notNull({slu, water_code}, TRUE);notEmpty({slu, water_code}, TRUE);matchList({slu, water_code},{'AI','AR','BA','CB','CG','CH','CL','CO','CS','CT','EA','FD','FP','GC','GP','IP','IZ','LE','LF','MI','PA','PB','PP','PR','QU','RD','RR','RU','RY','SG','SK','TM','TR','UR','WR','AQ',415}|NOT_APPLICABLE)","mapText({slu, water_code}, {'AI','AR','BA','CB','CG','CH','CL','CO','CS','CT','EA','FD','FP','GC','GP','IP','IZ','LE','LF','MI','PA','PB','PP','PR','QU','RD','RR','RU','RY','SG','SK','TM','TR','UR','WR', 'AQ', 415}, {})",Maps source value to NON_FOR_ANTH using list of values,TRUE
12,NON_FOR_VEG,text,"notNull({slu, water_code}, TRUE);matchList({slu, water_code},{'BO'}|NOT_APPLICABLE)","mapText({slu, water_code},{'BO'}, {'OPEN_MUSKEG'})",Maps source value to NON_FOR_VEG using list of values. Takes two source columns representing Forest and Waterbody nfl codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
