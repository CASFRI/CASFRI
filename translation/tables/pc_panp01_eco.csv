rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchListTwice(nat_non_veg, non_for_veg,{'FL'}, {'M1','M2'})",NA,Only run rows where the wetland validation on lowland and flooded sites,TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, src_filename, ogc_fid, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,WETLAND_TYPE,text,"notNull({nat_non_veg, non_for_veg}, TRUE);notEmpty({nat_non_veg,non_for_veg}, TRUE |NOT_APPLICABLE);matchListTwice(nat_non_veg, non_for_veg,{'FL'}, {'M1','M2'} |NOT_APPLICABLE)","mapTextNotNullIndex(non_for_veg, {'M1', 'M2'}, {'F', 'S'}, nat_non_veg, {'FL'}, {'M'}, 1)",Maps source value to WETLAND_TYPE using list of values,TRUE
3,WET_VEG_COVER,text,"notNull({nat_non_veg, non_for_veg}, TRUE);notEmpty({nat_non_veg,non_for_veg}, TRUE |NOT_APPLICABLE);matchListTwice(nat_non_veg, non_for_veg,{'FL'}, {'M1','M2'} |NOT_APPLICABLE)","mapTextNotNullIndex(non_for_veg, {'M1', 'M2'}, {'O', 'O'}, nat_non_veg, {'FL'}, {'O'}, 1)",Maps source value to WET_VEG_COVER using list of values,TRUE
4,WET_LANDFORM_MOD,text,"notNull({nat_non_veg, non_for_veg}, TRUE);notEmpty({nat_non_veg,non_for_veg}, TRUE |NOT_APPLICABLE);matchListTwice(nat_non_veg, non_for_veg,{'FL'}, {'M1','M2'} |NOT_APPLICABLE)","mapTextNotNullIndex(non_for_veg, {'M1', 'M2'}, {'N', 'N'}, nat_non_veg, {'FL'}, {'N'}, 1)",Maps source value to WET_LANDFORM_MOD using list of values,TRUE
5,WET_LOCAL_MOD,text,"notNull({nat_non_veg, non_for_veg}, TRUE);notEmpty({nat_non_veg,non_for_veg}, TRUE |NOT_APPLICABLE);matchListTwice(nat_non_veg, non_for_veg,{'FL'}, {'M1','M2'} |NOT_APPLICABLE)","mapTextNotNullIndex(non_for_veg, {'M1', 'M2'}, {'G', 'G'}, nat_non_veg, {'FL'}, {'G'}, 1)",Maps source value to WET_LOCAL_MOD using list of values,TRUE
6,ECO_SITE,text,false(),nothingText(),Attribute does not occur,TRUE
7,LAYER,integer,true(),"countOfNotNull({species_layer1,height_layer1}, {species_layer2,height_layer2}, {species_layer3,height_layer3}, {nfl_layer1}, {nfl_layer2}, {nfl_layer3}, layer, 'TRUE')","Calculate number of layer according to vegetation composition.  Because of its horizontal structure, the present schema doesn't allow to consider verticality in PC01. Thus understory species are not considered in the count of layer. ",TRUE
