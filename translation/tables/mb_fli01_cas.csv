rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Create cas_id using the unique identifier poly_id added during loading.,TRUE
2,INVENTORY_ID,text,notEmpty(inventory_id),copyText(inventory_id),Copies source value,TRUE
3,ORIG_STAND_ID,text,notNull(orig_stand_id_2),copyText(orig_stand_id_2),Copies source value,TRUE
4,STAND_STRUCTURE,text,"hasCountOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2}, {species_1_layer3, species_2_layer3, species_3_layer3}, {species_1_layer4, species_2_layer4, species_3_layer4}, {species_1_layer5, species_2_layer5, species_3_layer5}, 1, FALSE|NOT_APPLICABLE)","mb_fli01_stand_structure_translation(canlay, species_1_layer1, species_2_layer1, species_3_layer1, species_1_layer2, species_2_layer2, species_3_layer2,  species_1_layer3, species_2_layer3, species_3_layer3, species_1_layer4, species_2_layer4, species_3_layer4, species_1_layer5, species_2_layer5, species_3_layer5)","No Horizontal. Complex can be assigned to the canopy layer only. If present, copy it, otherwise count the number of layers using the canopy layer slot and the understory layer slots. Only passes validation if there is some canopy or understory species present. Translation function only uses the first 3 species.",TRUE
5,NUM_OF_LAYERS,integer,"hasCountOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1, species_6_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2, species_6_layer2}, {species_1_layer3, species_2_layer3, species_3_layer3, species_4_layer3, species_5_layer3, species_6_layer3}, {species_1_layer4, species_2_layer4, species_3_layer4, species_4_layer4, species_5_layer4, species_6_layer4}, {species_1_layer5, species_2_layer5, species_3_layer5, species_4_layer5, species_5_layer5, species_6_layer5}, {nnf_anth}, 1, FALSE|-8886)","countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1, species_5_layer1, species_6_layer1}, {species_1_layer2, species_2_layer2, species_3_layer2, species_4_layer2, species_5_layer2, species_6_layer2}, {species_1_layer3, species_2_layer3, species_3_layer3, species_4_layer3, species_5_layer3, species_6_layer3}, {species_1_layer4, species_2_layer4, species_3_layer4, species_4_layer4, species_5_layer4, species_6_layer4}, {species_1_layer5, species_2_layer5, species_3_layer5, species_4_layer5, species_5_layer5, species_6_layer5}, {nnf_anth}, 6, FALSE)",Count number of canopy and nfl layers as attributes with non null values. All nnf_anth values are CASFRI nfl values so if it has a value we have an nfl layer. Catch case where num_of_layers is zero.,TRUE
6,MAP_SHEET_ID,text,"notMatchList(inventory_id, 'MB07'|NOT_APPLICABLE);notNull(map_sheet_id);notEmpty(map_sheet_id)",copyText(map_sheet_id),Copies source value. No mapshhet id in mb07 so return NOT_APPLICABLE.,TRUE
7,CASFRI_AREA,double precision,"geoIsValid(wkb_geometry, TRUE|-8888)",geoArea(wkb_geometry),Validates geometry then calculates area,TRUE
8,CASFRI_PERIMETER,double precision,"geoIsValid(wkb_geometry, TRUE|-8888)",geoPerimeter(wkb_geometry),Validates geometry then calculates perimeter,TRUE
9,SRC_INV_AREA,double precision,"notNull(src_inv_area);isNumeric(src_inv_area);isGreaterThan(src_inv_area, 0, FALSE)","divideDouble(src_inv_area, 10000)",Converts source area from m2 to ha. Return OUT_OF_RANGE for any zero values.,TRUE
10,STAND_PHOTO_YEAR,integer,"notNull(stand_photo_year);isInt(stand_photo_year);isGreaterThan(stand_photo_year, 0, FALSE|-8888);isBetween(stand_photo_year, 1900, 2020)",copyInt(stand_photo_year),Copy year value.,TRUE
