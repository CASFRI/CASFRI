rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(mod_1, {'13'});matchList(mod_2, {'13'});matchList(mod_3,{'13'});matchList(mod_4, {'13'});matchList(mod_5, {'13'});matchList(mod_6, {'13'});matchList(mod_7, {'13'});matchList(mod_8,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'});matchList(mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'});matchList(mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'})",NA,No disturbance found in PC02, TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,DIST_TYPE_1,text,"hasCountOfMatchList(mod_1, {'13'}, mod_2, {'13'}, mod_3,{'13'}, mod_4, {'13'}, mod_5, {'13'}, mod_6, {'13'}, mod_7, {'13'}, mod_8,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, '1', 'FALSE' |NOT_APPLICABLE )","mapTextNotNullIndex(mod_1,'13', 'BURN', mod_2, '13', 'BURN', mod_3, '13', 'BURN', mod_4, '13', 'BURN', mod_5, '13', 'BURN', mod_6, '13', 'BURN', mod_7, '13', 'BURN', mod_8, {'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, {'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, 1)",Maps source value to DIST_1 using list of values. Takes 10 source columns representing geological and forest dst codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
3,DIST_YEAR_1,integer,false(),nothingInt(),Attribute does not occur,TRUE
4,DIST_EXT_UPPER_1,integer,false(),nothingInt(),Attribute does not occur,TRUE
5,DIST_EXT_LOWER_1,integer,false(),nothingInt(),Attribute does not occur,TRUE
6,DIST_TYPE_2,text,"hasCountOfMatchList(mod_1, {'13'}, mod_2, {'13'}, mod_3,{'13'}, mod_4, {'13'}, mod_5, {'13'}, mod_6, {'13'}, mod_7, {'13'}, mod_8,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, '2', 'FALSE' |NOT_APPLICABLE)","mapTextNotNullIndex(mod_1, '13', 'BURN', mod_2, '13', 'BURN',mod_3, '13', 'BURN',mod_4, '13', 'BURN',mod_5, '13', 'BURN',mod_6, '13', 'BURN',mod_7, '13', 'BURN', mod_8,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'},mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, 2)",Maps source value to NAT_NON_VEG using list of values. Takes two source columns representing Forest and Waterbody nfl codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
7,DIST_YEAR_2,integer,false(),nothingInt(),Attribute does not occur,TRUE
8,DIST_EXT_UPPER_2,integer,false(),nothingInt(),Attribute does not occur,TRUE
9,DIST_EXT_LOWER_2,integer,false(),nothingInt(),Attribute does not occur,TRUE
10,DIST_TYPE_3,text,"hasCountOfMatchList(mod_1, {'13'}, mod_2, {'13'}, mod_3,{'13'}, mod_4, {'13'}, mod_5, {'13'}, mod_6, {'13'}, mod_7, {'13'}, mod_8,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'}, '3', 'FALSE' |NOT_APPLICABLE)","mapTextNotNullIndex(mod_1, '13', 'BURN', mod_2, '13', 'BURN',mod_3, '13', 'BURN',mod_4, '13', 'BURN',mod_5, '13', 'BURN',mod_6, '13', 'BURN',mod_7, '13', 'BURN', mod_8,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, mod_9,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'},mod_10,{'A','F','G', 'K', 'S', 'W', 'KA', 'FG', 'M', 'MG', 'MF'},{'OTHER','OTHER','OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'OTHER', 'SLIDE', 'SLIDE', 'SLIDE'}, 3)",Maps source value to NAT_NON_VEG using list of values. Takes two source columns representing Forest and Waterbody nfl codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
11,DIST_YEAR_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
12,DIST_EXT_UPPER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
13,DIST_EXT_LOWER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
14,LAYER,integer,false(|-8886),nothingInt(),"Because of its horizontal structure, the source data do not allow to associated at which layer the disturbance occurred. ",TRUE
