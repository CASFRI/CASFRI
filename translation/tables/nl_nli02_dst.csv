rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(type_dist, {'x','X','z','Z','m','M','f','F','w','W','y','Y'}); isGreaterThan(year_dist, 1)",NA,"Translate row if it has a valid disturbance or silviculture value, or if it has a disturbance or silviculture year value that is greater than or equal to 1. i.e. not zero.",TRUE
1,CAS_ID,text,notEmpty(inventory_id);notEmpty(src_filename);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, '', orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','x','x'}, '-', TRUE, TRUE)",Concatenates five attributes to create CAS_ID,TRUE
2,DIST_TYPE_1,text,"notNull(type_dist);notEmpty(type_dist);matchList(type_dist,{'m','M','v','V','w','W','x','X','y','Y','z','Z','F'})","mapText(type_dist, {'m','M','v','V','w','W','x','X','y','Y','z','Z','F'}, {'OTHER','OTHER','OTHER','OTHER','WINDFALL','WINDFALL','CUT','CUT','BURN','BURN','INSECT','INSECT','FLOOD'})","Disturbances can be stored as a disturbance type or as a silverculture treatment. Get the oldest year value after converting null and zero years to 9999 (so disturbances without years are considered youngest). For the disturbance type corresponding to the oldest year, check its not null or empty, check its in the list, then translate using maptext.",TRUE
3,DIST_YEAR_1,integer,"notNull(year_dist|-8886);notMatchList(year_dist, {0}|-8886);isInt(year_dist);isBetween(year_dist, 1000, 2020)",copyInt(year_dist),"From list of the two year values, convert any nulls or zeros to 9999, then get the lowest value, test it is not null, an integer, and between 1000 and 2000, and return it. Catch any zero years as unknown values.",TRUE
4,DIST_EXT_UPPER_1,integer,false(|-8886),nothingInt(),Extent is unknown,TRUE
5,DIST_EXT_LOWER_1,integer,false(|-8886),nothingInt(),Extent is unknown,TRUE
6,DIST_TYPE_2,text,false(),nothingText(),"Disturbances can be stored as a disturbance type or as a silverculture treatment. Check both have a type or year value. Get the oldest year value after converting null and zero years to 9999 (so disturbances without years are considered youngest). For the disturbance type corresponding to the oldest year, check its not null or empty, check its in the list, then translate using maptext.",TRUE
7,DIST_YEAR_2,integer,false(),nothingInt(),"Check both attributes have a type or year value. From the list of the two year values, convert any nulls or zeros to 9999, then get the highest value, test it is int, test it is between 1000 and 2000, and return it. Catch any zero years as unknown values.",TRUE
8,DIST_EXT_UPPER_2,integer,false(),nothingInt(),"Extent is unknown. Return not applicable if there is only 1 disturbance, or unknown if there are two disturbances.",TRUE
9,DIST_EXT_LOWER_2,integer,false(),nothingInt(),"Extent is unknown. Return not applicable if there is only 1 disturbance, or unknown if there are two disturbances.",TRUE
10,DIST_TYPE_3,text,false(),nothingText(),Attribute does not occur,TRUE
11,DIST_YEAR_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
12,DIST_EXT_UPPER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
13,DIST_EXT_LOWER_3,integer,false(),nothingInt(),Attribute does not occur,TRUE
14,LAYER,integer,false(|-8886),nothingInt(),Disturbance layer is unknown,TRUE
