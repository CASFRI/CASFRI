rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(co_ter, {'BAT','DS','EAU','ILE','INO','A','AEP','AER','AF','ANT','BAS','CFO','CU','DEF','DEP','GR','HAB','LTE','MI','NF','RO','US','VIL','AL','DH','NX','BHE','BLE','CAM','CAR','CEX','CHE','CIM','CNE','CS','CV','DEM','GOL','PIC','PPN','QUA','SC','TOE','VRG','IMP'})",NA,"Translate only rows with an NFL value in co_ter. Source value AUT, TNP and INC are not translated as NFL because they are either not interpreted or nature is unknown. Note that none of these rows include LYR info so each polygon is either LYR or NFL.", TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(geocode_1_10);notNull(geocode_11_20),"padConcat({inventory_id, src_filename, geocode_1_10, geocode_11_20, ''}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID. Geocode_1_10 and geocode_11_20 are the original geocode string split into the first ten and second ten characters. Commas are replcaed with periods for use in the cas_id.,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);matchList(soil_moist_reg,{'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64'})
","mapText(soil_moist_reg, {'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64'}, {'DRY','DRY','DRY','DRY','DRY','DRY','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MESIC','MOIST','MOIST','MOIST','MOIST','MOIST','WET','WET','WET','WET','WET','AQUATIC','AQUATIC','AQUATIC','AQUATIC','AQUATIC'})",Maps source codes to CASFRI codes. Report value of 16 as NOT_IN_SET.,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure_per should always be 100,TRUE
4,LAYER,integer,true(),"qc_countOfNotNull(cl_age, co_ter, layer)","Uses the qc_standstructure_lookup table to find number of lyr layers, then tests to see if nfl is present and counts the total number of layers. Returns layers number based on the layer being translated.",TRUE
5,LAYER_RANK,integer,false(|-8887),nothingInt(),No rank attribute,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),Attribute does not occur,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),Attribute does not occur,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),Attribute does not occur,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),Atribute does not occur,TRUE
10,NAT_NON_VEG,text,"notNull(co_ter);notEmpty(co_ter);matchList(co_ter,{'BAT','DS','EAU','ILE','INO'}|NOT_APPLICABLE)","mapText(co_ter,{'BAT','DS','EAU','ILE','INO'}, {'TIDAL_FLATS','EXPOSED_LAND','WATERBODY','ISLAND','FLOOD'})",Maps source value to NAT_NON_VEG using list of values,TRUE
11,NON_FOR_ANTH,text,"notNull(co_ter);notEmpty(co_ter);matchList(co_ter,{'A','AEP','AER','AF','ANT','BAS','CFO','CU','DEF','DEP','GR','HAB','LTE','MI','NF','RO','US','VIL','BHE','BLE','CAM','CAR','CEX','CHE','CIM','CNE','CS','CV','DEM','GOL','PIC','PPN','QUA','SC','TOE','VRG'}|NOT_APPLICABLE)","mapText(co_ter,{'A','AEP','AER','AF','ANT','BAS','CFO','CU','DEF','DEP','GR','HAB','LTE','MI','NF','RO','US','VIL','BHE','BLE','CAM','CAR','CEX','CHE','CIM','CNE','CS','CV','DEM','GOL','PIC','PPN','QUA','SC','TOE','VRG'}, {'CULTIVATED','OTHER','FACILITY_INFRASTRUCTURE','CULTIVATED','SETTLEMENT','INDUSTRIAL','SETTLEMENT','SETTLEMENT','CULTIVATED','INDUSTRIAL','BORROW_PIT','SETTLEMENT','FACILITY_INFRASTRUCTURE','INDUSTRIAL','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','SETTLEMENT','FACILITY_INFRASTRUCTURE','CULTIVATED','SETTLEMENT','BORROW_PIT','SETTLEMENT','FACILITY_INFRASTRUCTURE','INDUSTRIAL','SETTLEMENT','SETTLEMENT','SETTLEMENT','INDUSTRIAL','SETTLEMENT','SETTLEMENT','CULTIVATED','INDUSTRIAL','INDUSTRIAL','CULTIVATED','CULTIVATED'})",Maps source value to NON_FOR_ANTH using list of values.,TRUE
12,NON_FOR_VEG,text,"notNull(co_ter);notEmpty(co_ter);matchList(co_ter,{'AL','DH','NX','IMP'}|NOT_APPLICABLE)","mapText(co_ter,{'AL','DH','NX','IMP'}, {'TALL_SHRUB','OPEN_MUSKEG','OTHER','OTHER'})",Maps source value to NON_FOR_VEG using list of values.,TRUE
