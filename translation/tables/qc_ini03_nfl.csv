rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"notEmpty({co_ter}, TRUE)",NA,"Translate only rows where sp1, sp2, sp3, sp4 or sp5 is not empty. Note that none of these rows include NFL info so each polygon is either LYR or NFL.", TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, src_filename, ogc_fid, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,"notNull(soil_moist_reg);matchList(soil_moist_reg,{'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64','16'})
","mapText(soil_moist_reg, {'00','10','11','12','13','14','20','21','22','23','24','30','31','32','33','34','40','41','42','43','44','50','51','52','53','54','60','61','62','63','64','16'}, {'D','D','D','D','D','D','F','F','F','F','F','F','F','F','F','F','M','M','M','M','M','W','W','W','W','W','A','A','A','A','A','UNUSED_VALUE'})",Maps source codes to CASFRI codes,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure_per should always be 100,TRUE
4,LAYER,integer,true(),copyInt(1),Count layers up to max_layer_number which is set by the createMappingsView() function in the workflow. Dummy variables are used here and in attribute_dependencies.csv to avoid two sets of values (sp1 and usp1) being mapped to the same column (sp1),FALSE
5,LAYER_RANK,integer,false(|-8887),nothingInt(),No rank attribute,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),Maps source value to CROWN_CLOSURE_UPPER using lists of values,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),Maps source value to CROWN_CLOSURE_LOWER using lists of values,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),Copies source value to HEIGHT_UPPER,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),Copies source value to HEIGHT_LOWER,TRUE
10,NAT_NON_VEG,text,"notNull(nat_non_veg);notEmpty(nat_non_veg);matchList(nat_non_veg,{'BAT','DS','EAU','ILE','INO'})","mapText(nat_non_veg,{'BAT','DS','EAU','ILE','INO'}, {'TIDAL_FLATS','EXPOSED_LAND','WATERBODY','ISLAND','FLOOD'})",Maps source value to NAT_NON_VEG using list of values,TRUE
11,NON_FOR_ANTH,text,"notNull(non_for_anth);notEmpty(non_for_anth);matchList(non_for_anth,{'A','AEP','AER','AF','ANT','BAS','CFO','CU','DEF','DEP','GR','HAB','LTE','MI','NF','RO','US','VIL'})","mapText(non_for_anth,{'A','AEP','AER','AF','ANT','BAS','CFO','CU','DEF','DEP','GR','HAB','LTE','MI','NF','RO','US','VIL'}, {'CULTIVATED','OTHER','FACILITY_INFRASTRUCTURE','CULTIVATED','SETTLEMENT','INDUSTRIAL','SETTLEMENT','SETTLEMENT','CULTIVATED','INDUSTRIAL','BORROW_PIT','SETTLEMENT','FACILITY_INFRASTRUCTURE','INDUSTRIAL','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','FACILITY_INFRASTRUCTURE','SETTLEMENT'})","Custom CASFRI map function merges anth_veg and anth_non then runs mapText. Validation functions check exactly one input has a value, and that the value is in the match list.",TRUE
12,NON_FOR_VEG,text,"notNull(non_for_veg);notEmpty(non_for_veg);matchList(non_for_veg,{'AL','DH','NX'})","mapText(non_for_veg,{'AL','DH','NX'}, {'TALL_SHRUB','OPEN_MUSKEG','OTHER'})",Maps source value to NON_FOR_VEG using list of values. FLAG-map list matches fri list. Is this correct?,TRUE
