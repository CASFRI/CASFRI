rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
1,CAS_ID,text,notEmpty(inventory_id);notNull(mapsheet);notNull(forest_id);notNull(src_filename);notNull(ogc_fid),"padConcat({inventory_id, src_filename, mapsheet, forest_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,false(),nothingText(),Attribute does not occur,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,LAYER,integer,true(),"countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1}, {species_1_layer2}, {fornon}, max_layer_number, 'FALSE')","Count layers up to max_layer_number which is set by the createMappingsView() function in the workflow. Third grouping represents nfl rows using slu (from FOREST table), water_code (from WATERBODY table), and wc (from WETLAND table). slu and water_code rows will be translated using the NFL table. wc rows will be translated using the ECO table. Dummy names used where values need to be mapped to two different attributes.",TRUE
5,LAYER_RANK,integer,false(|-8887),nothingInt(),Attribute does not occur,TRUE
6,CROWN_CLOSURE_UPPER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
7,CROWN_CLOSURE_LOWER,integer,false(),nothingInt(),No crown closure value for nfl,TRUE
8,HEIGHT_UPPER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
9,HEIGHT_LOWER,double precision,false(),nothingDouble(),No height value for nfl,TRUE
10,NAT_NON_VEG,text,"notNull({fornon}, TRUE);matchList({fornon},{71, 76, 77, 78, 84, 85, 94})","mapText({slu, water_code}, {71, 76, 77, 78, 84, 85, 94}, {'FL', 'RK', 'LA', 'OC', 'EX', 'EX', 'BE'})",Maps source value to NAT_NON_VEG using list of values. Takes two source columns representing Forest and Waterbody nfl codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
11,NON_FOR_ANTH,text,"notNull({fornon}, TRUE);matchList({fornon},{5, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99})","mapText(slu, {5, 86, 87, 91, 92, 93, 95, 96, 97, 98, 99}, {'CL', 'CL', 'SE', 'CL', 'OT', 'IN', 'IN', 'FA', 'FA', 'FA',' FA""})",Maps source value to NON_FOR_ANTH using list of values,TRUE
12,NON_FOR_VEG,text,"notNull({fornon}, TRUE);matchList({fornon},{33, 38, 39, 70, 72, 74, 75, 83, 88, 89})","mapText({slu, water_code},{33, 38, 39, 70, 72, 74, 75, 83, 88, 89}, {'ST', 'ST', 'ST', 'OM', 'OM', 'OM', 'OM', 'ST', 'ST', 'ST'})",Maps source value to NON_FOR_VEG using list of values. Takes two source columns representing Forest and Waterbody nfl codes. Function concatenates these together but since one will always be null it will just pass the non-null value to the mapping list. NotNull tests that at least one has a value.,TRUE
