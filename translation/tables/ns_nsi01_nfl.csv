rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"matchList(fornon,{71,76,77,78,84,85,94, 5,86,87,91,92,93,95,96,97,98,99, 33,38,39,70,72,74,75,83,88,89})",NA,Translate only rows where fornon has an NFL value,TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(map_sheet_id);notNull(orig_stand_id);notNull(src_filename);notNull(forest_),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, forest_}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,SOIL_MOIST_REG,text,false(|UNKNOWN_VALUE),nothingText(),Attribute does not occur,TRUE
3,STRUCTURE_PER,integer,true(),copyInt(100),No horizontal structure so structure percent is 100,TRUE
4,LAYER,integer,true(),"ns_nsi01_countOfNotNull({species_1_layer1, species_2_layer1, species_3_layer1, species_4_layer1 }, {species_1_layer2}, fornon, layer, 'FALSE')",Counts number of layers based on the presence of a not null value for attributes representing each layer. Custom function decides if NFL layer is present based on rules in NFL table.,TRUE
5,LAYER_RANK,integer,false(|-8887),nothingInt(),Attribute does not occur,TRUE
6,CROWN_CLOSURE_UPPER,integer,"matchList(fornon,{33,83,38,88,39,89,5}|-8887)","mapInt(fornon, {33,83,38,88,39,89,5}, {99,99,74,74,100,100,24})",Crown closure upper and lower extracted from fornon descriptions in manual.,TRUE
7,CROWN_CLOSURE_LOWER,integer,"matchList(fornon,{33,83,38,88,39,89,5}|-8887)","mapInt(fornon, {33,83,38,88,39,89,5}, {25,25,1,1,75,75,1})",Crown closure upper and lower extracted from fornon descriptions in manual.,TRUE
8,HEIGHT_UPPER,double precision,"matchList(fornon,{5}|-8887)","mapDouble(fornon, {5}, {'0.99'})",Height upper and lower extracted from fornon descriptions in manual.,TRUE
9,HEIGHT_LOWER,double precision,"matchList(fornon,{5}|-8887)","mapDouble(fornon, {5}, {'0.1'})",Height upper and lower extracted from fornon descriptions in manual.,TRUE
10,NAT_NON_VEG,text,"notNull(fornon);matchList(fornon,{71,76,77,78,84,85,94}|NOT_APPLICABLE)","mapText(fornon, {71,76,77,78,84,85,94}, {'FL','RK','LA','OC','EX','EX','BE'})",Maps source value to NAT_NON_VEG using list of values.,TRUE
11,NON_FOR_ANTH,text,"notNull(fornon);matchList(fornon,{5,86,87,91,92,93,95,96,97,98,99}|NOT_APPLICABLE)","mapText(fornon, {5,86,87,91,92,93,95,96,97,98,99}, {'CL','CL','SE','CL','OT','IN','IN','FA','FA','FA','FA'})",Maps source value to NON_FOR_ANTH using list of values.,TRUE
12,NON_FOR_VEG,text,"notNull(fornon);matchList(fornon,{33,38,39,70,72,74,75,83,88,89}|NOT_APPLICABLE)","mapText(fornon,{33,38,39,70,72,74,75,83,88,89}, {'ST','ST','ST','OM','OM','OM','OM','ST','ST','ST'})",Maps source value to NON_FOR_VEG using list of values.,TRUE
