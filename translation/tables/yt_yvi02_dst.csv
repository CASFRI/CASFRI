rule_id,target_attribute,target_attribute_type,validation_rules,translation_rules,description,desc_uptodate_with_rules
0,ROW_TRANSLATION_RULE,NA,"notEmpty(disturbance1_code, disturbance2_code, disturbance3_code)",NA,Translate only rows where dist_code1 is not empty, TRUE
1,CAS_ID,text,notEmpty(inventory_id);notNull(src_filename);notNull(map_sheet_id);notNull(orig_stand_id);notNull(ogc_fid),"padConcat({inventory_id, src_filename, map_sheet_id, orig_stand_id, ogc_fid}, {4,15,10,10,7}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,DIST_TYPE_1,text,"notNull(disturbance1_code, disturbance1_layer);notEmpty(disturbance1_code, disturbance1_layer);matchList(dist_type_1,{'DB','DF','DI','DL','DM','DS','DW',SI','SL','UC'})","mapText(disturbance1_code, {'DB','DF','DI','DL','DM','DS','DW','SI','SL','UC'}, {'BURN','FLOOD','INSECT','CUT','OTHER','SILVICULTURE_TREATMENT','WINDFALL','SILVICULTURE_TREATMENT','SLIDE','OTHER'})",Maps source value to DIST_TYPE_1 using lists of values,TRUE
3,DIST_YEAR_1,integer,"notNull(disturbance1_year);isInt(disturbance1_year);isBetween(disturbance1_year, 1000, 2020)",copyInt(disturbance1_year),Copies source attribute to DIST_YEAR_1,TRUE
4,DIST_EXT_UPPER_1,integer,"notNull(disturbance1_extent_percent);isInt(disturbance1_extent_percent);isBetween(disturbance1_extent_percent, 5, 100)",copyInt(disturbance1_extent_percent),Copies source attribute to DIST_EXT_UPPER_1,TRUE
5,DIST_EXT_LOWER_1,integer,"notNull(disturbance1_extent_percent);isInt(disturbance1_extent_percent);isBetween(disturbance1_extent_percent, 5, 100)",copyInt(disturbance1_extent_percent),Copies source attribute to DIST_EXT_LOWER_1,TRUE
6,DIST_TYPE_2,text,"notNull(disturbance1_code, disturbance1_layer);notEmpty(disturbance1_code, disturbance1_layer);matchList(disturbance2_code,{'DB','DF','DI','DL','DS','SI','SL'})","mapText(disturbance2_code, {'DB','DF','DI','DL','DS','SI','SL'}, {'BURN','FLOOD','INSECT','CUT','SILVICULTURE_TREATMENT','SILVICULTURE_TREATMENT','SLIDE'})",Maps source value to DIST_TYPE_2 using lists of values,TRUE
7,DIST_YEAR_2,integer,"notNull(disturbance2_year);isInt(disturbance2_year);isBetween(disturbance2_year, 1000, 2020)",copyInt(disturbance2_year),Copies source attribute to DIST_YEAR_2,TRUE
8,DIST_EXT_UPPER_2,integer,"notNull(disturbance2_extent_percent);isInt(disturbance2_extent_percent);isBetween(disturbance2_extent_percent, 5, 100)",copyInt(disturbance2_extent_percent),Copies source attribute to DIST_EXT_UPPER_2,TRUE
9,DIST_EXT_LOWER_2,integer,"notNull(disturbance2_extent_percent);isInt(disturbance2_extent_percent);isBetween(disturbance2_extent_percent, 5, 100)",copyInt(disturbance2_extent_percent),Copies source attribute to DIST_EXT_LOWER_2,TRUE
10,DIST_TYPE_3,text,"notNull(disturbance3_code);notEmpty(disturbance3);matchList(disturbance3_code, {'DB','DI','DL'})","mapText(disturbance3_code, {'DB','DI','DL'}, {'BURN','INSECT','CUT'})",Maps source value to DIST_TYPE_3 using lists of values,TRUE
11,DIST_YEAR_3,integer,"notNull(disturbance3_year);isInt(disturbance3_year);isBetween(disturbance3_year, 1000, 2020)",copyInt(disturbance3_year),Copies source attribute to DIST_YEAR_3,TRUE
12,DIST_EXT_UPPER_3,integer,"notNull(disturbance3_extent_percent);isInt(disturbance3_extent_percent);isBetween(disturbance3_extent_percent, 5, 100)",copyInt(disturbance3_extent_percent),Copies source attribute to DIST_EXT_UPPER_3,TRUE
13,DIST_EXT_LOWER_3,integer,"notNull(disturbance3_extent_percent);isInt(disturbance3_extent_percent);isBetween(disturbance3_extent_percent, 5, 100)",copyInt(disturbance3_extent_percent),Copies source attribute to DIST_EXT_LOWER_3,TRUE
14,LAYER,integer,true(),copyInt(1),"Disturbance has to be on layer 1, because there is only one layer.",TRUE
