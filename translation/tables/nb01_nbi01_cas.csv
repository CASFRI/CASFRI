rule_id,targetAttribute,targetAttributeType,validationRules,translationRules,description,descUpToDateWithRules
1,CAS_ID,text,notNull(src_filename|NULL_VALUE);notNull(stdlab|NULL_VALUE);notNull(ogc_fid|NULL_VALUE),"padConcat({'nb01', src_filename, '', stdlab, ogc_fid}, {'4','15','10','10','7'}, {'x','x','x','0','0'}, '-', 'TRUE', 'TRUE')",Concatenates five attributes to create CAS_ID,TRUE
2,ORIG_STAND_ID,text,"notNull(stdlab|NULL_VALUE);isInt(stdlab|WRONG_TYPE);isGreaterThan(stdlab, '0'|OUT_OF_RANGE)",copyText(stdlab),Copies source value to ORIG_STAND_ID,TRUE
3,STAND_STRUCTURE,text,"notNull(src_filename|NULL_VALUE);matchList(src_filename, {'Forest'}|INVALID_VALUE);notNull(l1vs|NULL_VALUE);notNull(l2vs|NULL_VALUE);isInt(l1vs|WRONG_TYPE);isInt(l2vs|WRONG_TYPE)","nbi01_stand_structure_translation(src_filename, l1vs, l2vs)","If src_filename=Forest and l2vs=0, then stand_structure=S. If src_filename=Forest and (l1vs>0 and l2vs>0) then stand_structure=M. If src_filename=Forest and (l1vs>1 and l2vs>1) then stand_structure=C. Validation should check for null and that l1vs and l2vs are integers.",TRUE
4,NUM_OF_LAYERS,integer,"notNull(src_filename|-8888);matchList(src_filename, {'Forest'}|-9997);notNull(l1vs|-8888);notNull(l2vs|-8888);isInt(l1vs|-9995);isInt(l2vs|-9995)","nbi01_num_of_layers_translation(src_filename, l1vs, l2vs)","If src_filename is Forest and stand_structure is S, then num_of_layers is 1. If stand_structure is M or C, num_of_layers = 2. Validation should check for null and that l1vs and l2vs are integers.",TRUE
5,IDENTIFICATION_ID,integer,false(|-8887),nothingInt(),Maps source value to IDENTIFCATION_ID using list,TRUE
6,MAP_SHEET_ID,text,false(|NOT_APPLICABLE),nothingText(),Copies source value to MAP_SHEET_ID,TRUE
7,CASFRI_AREA,double precision,"geoIsValid(wkb_geometry, TRUE|-9997)",geoArea(wkb_geometry),Validates geometry then calculates area,TRUE
8,CASFRI_PERIMETER,double precision,"geoIsValid(wkb_geometry, TRUE|-9997)",geoPerimeter(wkb_geometry),Validates geometry then calculates perimeter,TRUE
9,SRC_INV_AREA,double precision,"notNull(shape_area|-8888);isNumeric(shape_area|-9995);isGreaterThan(shape_area, '0'|-9999)",copyDouble(shape_area),Copies source value to SRC_INV_AREA,TRUE
10,STAND_PHOTO_YEAR,integer,"notNull(datayr|-8888);isInt(datayr|-9995);isBetween(datayr, '1900', '2020'|-9999)",copyInt(datayr),Copies source value to STAND_PHOTO_YEAR,TRUE
